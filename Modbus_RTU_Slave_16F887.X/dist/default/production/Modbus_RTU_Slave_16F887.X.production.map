Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Modbus_RTU_Slave_16F887.X.production.sym \
  --cmf=dist/default/production\Modbus_RTU_Slave_16F887.X.production.cmf -z \
  -Q16F887 -oC:\Users\BANPOT~1\AppData\Local\Temp\sn64.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Modbus_RTU_Slave_16F887.X.production.map -E1 \
  -ver=XC8 Compiler --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 \
  -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh \
  -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh \
  -ABANK3=0190h-01EFh -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\BANPOT~1\AppData\Local\Temp\sn64.o \
  dist/default/production\Modbus_RTU_Slave_16F887.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\BANPOT~1\AppData\Local\Temp\sn64.o
                end_init                              0        0        3        0       0
                config                             2007     2007        1        0       4
dist/default/production\Modbus_RTU_Slave_16F887.X.production.o
                cinit                               7EB      7EB       15      FD6       0
                eeprom_data                           0     2100        8     4200       3
                config                             2007     2007        1        0       4
                text11                              32C      32C       1E      658       0
                text10                              40D      40D       72      81A       0
                text9                               301      301       14      602       0
                text8                               64D      64D       BA      C9A       0
                text7                               47F      47F       8A      8FE       0
                text6                               36B      36B       3C      6D6       0
                text5                               707      707       E4      E0E       0
                text4                               315      315       17      62A       0
                text3                               34A      34A       21      694       0
                text2                               509      509       9D      A12       0
                text1                               3A7      3A7       66      74E       0
                maintext                            5A6      5A6       A7      B4C       0
                cstackBANK0                          4B       4B       15       20       1
                cstackCOMMON                         70       70        E       70       1
                clrtext                             2F9      2F9        8      5F2       0
                bssBANK1                             A0       A0       39       A0       1
                bssBANK0                             20       20       2B       20       1
                nvBANK0                              60       60        9       20       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7EB      7EB       15         0
                text11                              32C      32C       1E         0
                text10                              40D      40D       72         0
                text9                               301      301       14         0
                text8                               64D      64D       BA         0
                text7                               47F      47F       8A         0
                text6                               36B      36B       3C         0
                text5                               707      707       E4         0
                text4                               315      315       17         0
                text3                               34A      34A       21         0
                text2                               509      509       9D         0
                text1                               3A7      3A7       66         0
                maintext                            5A6      5A6       A7         0
                clrtext                             2F9      2F9        8         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          4B       4B       15         1
                bssBANK0                             20       20       2B         1
                nvBANK0                              60       60        9         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       39         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         4

        CLASS   IDLOC          

        CLASS   EEDATA         
                eeprom_data                           0     2100        8         3



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                bssBANK0                       000020  000049  000069        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                bssBANK1                       0000A0  000039  0000D9        A0       1  BANK1       1
                clrtext                        0002F9  000008  000301       5F2       0  CODE        2
                text9                          000301  000014  000315       602       0  CODE        2
                text4                          000315  000017  00032C       62A       0  CODE        2
                text11                         00032C  00001E  00034A       658       0  CODE        2
                text3                          00034A  000021  00036B       694       0  CODE        2
                text6                          00036B  00003C  0003A7       6D6       0  CODE        2
                text1                          0003A7  000066  00040D       74E       0  CODE        2
                text10                         00040D  000072  00047F       81A       0  CODE        2
                text7                          00047F  00008A  000509       8FE       0  CODE        2
                text2                          000509  00009D  0005A6       A12       0  CODE        2
                maintext                       0005A6  0000A7  00064D       B4C       0  CODE        2
                text8                          00064D  0000BA  000707       C9A       0  CODE        2
                text5                          000707  0000E4  0007EB       E0E       0  CODE        2
                cinit                          0007EB  000015  000800       FD6       0  CODE        2
                eeprom_data                    002100  000008  002108      4200       3  EEDATA      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0069-006F              7           1
        BANK1            00D9-00EF             17           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-02F8            2F6           2
                         0800-1FFF            800
        CONFIG           2008-2008              1           2
        CONST            0003-02F8            100           2
                         0800-1FFF            100
        EEDATA           2108-21FF             F8           2
        ENTRY            0003-02F8            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0069-006F              7           1
                         00D9-00EF             17
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-02F8            2F6           2
                         0800-1FFF           1800
        STRING           0003-02F8            100           2
                         0800-1FFF            100

                                  Symbol Table

?_ADC_Read               cstackCOMMON 0070
?_CRC16                  cstackCOMMON 0070
?___aldiv                cstackCOMMON 0070
ADC_Read@adc_ch          cstackCOMMON 0073
CRC16@byte_cnt           cstackCOMMON 0070
CRC16@ptrByte            cstackCOMMON 007B
CRC16@shift_cnt          cstackCOMMON 007A
CRC16@w                  cstackCOMMON 007C
MODBUS_SLAVE@MODBUS      cstackBANK0  005B
MODBUS_SLAVE@tmp         cstackBANK0  0059
TX_03@MODBUS             cstackBANK0  0053
TX_03@m                  cstackBANK0  0051
TX_03@n                  cstackBANK0  004B
TX_03@tmp                cstackBANK0  004D
TX_03@tmp1               cstackBANK0  004F
TX_16@MODBUS             cstackBANK0  0051
TX_16@count              cstackBANK0  004D
TX_16@i                  cstackBANK0  004B
TX_16@j                  cstackBANK0  004E
TX_16@tmp                cstackBANK0  004F
TX_ERROR@MODBUS          cstackCOMMON 0072
TX_ERROR@error_type      cstackCOMMON 0070
TX_FRAME@MODBUS          cstackCOMMON 0072
_ADCON0                  (abs)        001F
_ADCON0bits              (abs)        001F
_ADCON1                  (abs)        009F
_ADC_Read                text11       032C
_ADRESH                  (abs)        001E
_ADRESL                  (abs)        009E
_ANSEL                   (abs)        0188
_ANSELH                  (abs)        0189
_BAUDCTL                 (abs)        0187
_CRC16                   text10       040D
_EEADR                   (abs)        010D
_EECON1                  (abs)        018C
_EECON1bits              (abs)        018C
_EEDATA                  (abs)        010C
_Flag_Adc                bssBANK0     0049
_INTCONbits              (abs)        000B
_MODBUS                  bssBANK1     00A0
_MODBUS_SLAVE            text5        0707
_OPTION_REG              (abs)        0081
_PIE1bits                (abs)        008C
_PIR1                    (abs)        000C
_PIR1bits                (abs)        000C
_PORTB                   (abs)        0006
_PORTBbits               (abs)        0006
_PORTCbits               (abs)        0007
_RCREG                   (abs)        001A
_RCSTA                   (abs)        0018
_RCSTAbits               (abs)        0018
_SPBRG                   (abs)        0099
_SPBRGH                  (abs)        009A
_TRISAbits               (abs)        0085
_TRISB                   (abs)        0086
_TRISCbits               (abs)        0087
_TXREG                   (abs)        0019
_TXSTA                   (abs)        0098
_TXSTAbits               (abs)        0098
_TX_03                   text8        064D
_TX_16                   text7        047F
_TX_ERROR                text9        0301
_TX_FRAME                text6        036B
_TickAdc                 bssBANK0     004A
__Beeprom_data           eeprom_data  2100
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__HbssBANK0              bssBANK0     0000
__HbssBANK1              bssBANK1     0000
__Hcinit                 cinit        0800
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2008
__HcstackBANK0           cstackBANK0  0000
__HcstackCOMMON          cstackCOMMON 0000
__Heeprom_data           eeprom_data  0008
__Hend_init              end_init     0003
__Hfunctab               functab      0000
__Hinit                  init         0000
__Hintentry              intentry     0000
__Hmaintext              maintext     0000
__HnvBANK0               nvBANK0      0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0000
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hspace_0               (abs)        0800
__Hspace_1               (abs)        00D9
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0008
__Hspace_4               (abs)        400F
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__LbssBANK0              bssBANK0     0000
__LbssBANK1              bssBANK1     0000
__Lcinit                 cinit        07EB
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       0000
__LcstackBANK0           cstackBANK0  0000
__LcstackCOMMON          cstackCOMMON 0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0000
__Lfunctab               functab      0000
__Linit                  init         0000
__Lintentry              intentry     0000
__Lmaintext              maintext     0000
__LnvBANK0               nvBANK0      0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lspace_4               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        0800
__S1                     (abs)        00D9
__S2                     (abs)        0000
__S3                     (abs)        2108
___aldiv                 text2        0509
___aldiv@counter         cstackBANK0  004B
___aldiv@dividend        cstackCOMMON 0074
___aldiv@divisor         cstackCOMMON 0070
___aldiv@quotient        cstackBANK0  004D
___aldiv@sign            cstackBANK0  004C
___int_sp                stack        0000
___latbits               (abs)        0002
___sp                    stack        0000
___stackhi               (abs)        0000
___stacklo               (abs)        0000
__end_of_ADC_Read        text11       034A
__end_of_CRC16           text10       047F
__end_of_MODBUS_SLAVE    text5        07EB
__end_of_TX_03           text8        0707
__end_of_TX_16           text7        0509
__end_of_TX_ERROR        text9        0315
__end_of_TX_FRAME        text6        03A7
__end_of___aldiv         text2        05A6
__end_of__initialization cinit        07FC
__end_of_eeprom_read     text4        032C
__end_of_main            maintext     064D
__end_of_pic_init        text3        036B
__end_of_uart_init       text1        040D
__initialization         cinit        07EB
__pbssBANK0              bssBANK0     0020
__pbssBANK1              bssBANK1     00A0
__pcstackBANK0           cstackBANK0  004B
__pcstackCOMMON          cstackCOMMON 0070
__pmaintext              maintext     05A6
__pnvBANK0               nvBANK0      0060
__ptext1                 text1        03A7
__ptext10                text10       040D
__ptext11                text11       032C
__ptext2                 text2        0509
__ptext3                 text3        034A
__ptext4                 text4        0315
__ptext5                 text5        0707
__ptext6                 text6        036B
__ptext7                 text7        047F
__ptext8                 text8        064D
__ptext9                 text9        0301
__size_of_ADC_Read       (abs)        0000
__size_of_CRC16          (abs)        0000
__size_of_MODBUS_SLAVE   (abs)        0000
__size_of_TX_03          (abs)        0000
__size_of_TX_16          (abs)        0000
__size_of_TX_ERROR       (abs)        0000
__size_of_TX_FRAME       (abs)        0000
__size_of___aldiv        (abs)        0000
__size_of_eeprom_read    (abs)        0000
__size_of_main           (abs)        0000
__size_of_pic_init       (abs)        0000
__size_of_uart_init      (abs)        0000
_adc_ch0                 nvBANK0      0066
_adc_ch1                 nvBANK0      0064
_adc_ch2                 nvBANK0      0062
_adc_ch3                 nvBANK0      0060
_addr                    nvBANK0      0068
_eeprom_read             text4        0315
_main                    maintext     05A6
_pic_init                text3        034A
_res_table               bssBANK0     0020
_uart_init               text1        03A7
btemp                    (abs)        007E
clear_ram0               clrtext      02F9
eeprom_read@addr         cstackCOMMON 0071
end_of_initialization    cinit        07FC
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
reset_vec                reset_vec    0000
start                    init         0000
start_initialization     cinit        07EB
uart_init@bRate          cstackCOMMON 0079
uart_init@baud           cstackBANK0  0051
wtemp0                   (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 75 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_ADC_Read
		_MODBUS_SLAVE
		_eeprom_read
		_pic_init
		_uart_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _uart_init *****************
 Defined at:
		line 8 in file "uart_init.c"
 Parameters:    Size  Location     Type
  baud            2    6[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  bRate           2    9[COMMON] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0      12       0       0       0
      Totals:         2      14       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___aldiv
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[COMMON] long 
  dividend        4    4[COMMON] long 
 Auto vars:     Size  Location     Type
  quotient        4    2[BANK0 ] long 
  sign            1    1[BANK0 ] unsigned char 
  counter         1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMMON] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         8       0       0       0       0
      Locals:         0       6       0       0       0
      Temps:          1       0       0       0       0
      Totals:         9       6       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_uart_init
 This function uses a non-reentrant model


 *************** function _pic_init *****************
 Defined at:
		line 9 in file "init.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _eeprom_read *****************
 Defined at:
		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c"
 Parameters:    Size  Location     Type
  addr            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  addr            1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _MODBUS_SLAVE *****************
 Defined at:
		line 12 in file "modbus.c"
 Parameters:    Size  Location     Type
  MODBUS          1    wreg     PTR struct .
		 -> MODBUS(57), 
 Auto vars:     Size  Location     Type
  MODBUS          1   16[BANK0 ] PTR struct .
		 -> MODBUS(57), 
  tmp             2   14[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_CRC16
		_TX_03
		_TX_16
		_TX_ERROR
		_TX_FRAME
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TX_FRAME *****************
 Defined at:
		line 116 in file "modbus.c"
 Parameters:    Size  Location     Type
  MODBUS          1    wreg     PTR struct .
		 -> MODBUS(57), 
 Auto vars:     Size  Location     Type
  MODBUS          1    2[COMMON] PTR struct .
		 -> MODBUS(57), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_MODBUS_SLAVE
 This function uses a non-reentrant model


 *************** function _TX_16 *****************
 Defined at:
		line 89 in file "modbus.c"
 Parameters:    Size  Location     Type
  MODBUS          1    wreg     PTR struct .
		 -> MODBUS(57), 
 Auto vars:     Size  Location     Type
  MODBUS          1    6[BANK0 ] PTR struct .
		 -> MODBUS(57), 
  i               2    0[BANK0 ] unsigned int 
  tmp             2    4[BANK0 ] unsigned int 
  j               1    3[BANK0 ] unsigned char 
  count           1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       7       0       0       0
      Temps:          5       0       0       0       0
      Totals:         5       7       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_TX_ERROR
 This function is called by:
		_MODBUS_SLAVE
 This function uses a non-reentrant model


 *************** function _TX_03 *****************
 Defined at:
		line 53 in file "modbus.c"
 Parameters:    Size  Location     Type
  MODBUS          1    wreg     PTR struct .
		 -> MODBUS(57), 
 Auto vars:     Size  Location     Type
  MODBUS          1    8[BANK0 ] PTR struct .
		 -> MODBUS(57), 
  m               2    6[BANK0 ] unsigned int 
  tmp1            2    4[BANK0 ] unsigned int 
  tmp             2    2[BANK0 ] unsigned int 
  n               2    0[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       9       0       0       0
      Temps:          6       0       0       0       0
      Totals:         6       9       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_TX_ERROR
 This function is called by:
		_MODBUS_SLAVE
 This function uses a non-reentrant model


 *************** function _TX_ERROR *****************
 Defined at:
		line 133 in file "modbus.c"
 Parameters:    Size  Location     Type
  MODBUS          1    wreg     PTR struct .
		 -> MODBUS(57), 
  error_type      1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  MODBUS          1    2[COMMON] PTR struct .
		 -> MODBUS(57), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_MODBUS_SLAVE
		_TX_03
		_TX_16
 This function uses a non-reentrant model


 *************** function _CRC16 *****************
 Defined at:
		line 145 in file "modbus.c"
 Parameters:    Size  Location     Type
  ptrByte         1    wreg     PTR unsigned char 
		 -> MODBUS(57), 
  byte_cnt        2    0[COMMON] int 
 Auto vars:     Size  Location     Type
  ptrByte         1   11[COMMON] PTR unsigned char 
		 -> MODBUS(57), 
  w               2   12[COMMON] unsigned int 
  shift_cnt       1   10[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          8       0       0       0       0
      Totals:        14       0       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_MODBUS_SLAVE
 This function uses a non-reentrant model


 *************** function _ADC_Read *****************
 Defined at:
		line 60 in file "main.c"
 Parameters:    Size  Location     Type
  adc_ch          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  adc_ch          1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
modbus.c
		_TX_FRAME      		CODE           	036B	0000	60
		_TX_16         		CODE           	047F	0000	138
		_TX_ERROR      		CODE           	0301	0000	20
		_MODBUS_SLAVE  		CODE           	0707	0000	228
		_TX_03         		CODE           	064D	0000	186
		_CRC16         		CODE           	040D	0000	114

modbus.c estimated size: 746

shared
		__initialization		CODE           	07EB	0000	17

shared estimated size: 17

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c
		_eeprom_read   		CODE           	0315	0000	23

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c estimated size: 23

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c
		___aldiv       		CODE           	0509	0000	157

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c estimated size: 157

uart_init.c
		_uart_init     		CODE           	03A7	0000	102

uart_init.c estimated size: 102

init.c
		_pic_init      		CODE           	034A	0000	33

init.c estimated size: 33

main.c
		_main          		CODE           	05A6	0000	167
		_ADC_Read      		CODE           	032C	0000	30

main.c estimated size: 197

