Microchip MPLAB XC8 Compiler V1.41 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.41\dat\en_msgs.txt -cs \
  -h+dist/default/production\Modbus_RTU_Slave_16F887.X.production.sym \
  --cmf=dist/default/production\Modbus_RTU_Slave_16F887.X.production.cmf -z \
  -Q16F887 -oC:\Users\yakuz\AppData\Local\Temp\seo4.2 \
  -Mdist/default/production/Modbus_RTU_Slave_16F887.X.production.map -E1 \
  -ver=XC8 -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\yakuz\AppData\Local\Temp\seo4.obj \
  dist/default/production\Modbus_RTU_Slave_16F887.X.production.obj 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\yakuz\AppData\Local\Temp\seo4.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\Modbus_RTU_Slave_16F887.X.production.obj
                cinit                                15       15       16        8       0
                intentry                              4        4        E        8       0
                eeprom_data                           0     2100        8     4200       3
                text12                              43A      43A       51        8       0
                text11                              506      506       1E        8       0
                text10                              351      351       7D        8       0
                text9                               524      524       16        8       0
                text8                               1A0      1A0       9E        8       0
                text7                               2CD      2CD       84        8       0
                text6                               48B      48B       38        8       0
                text5                                2B       2B       D7        8       0
                text4                               4C3      4C3       22        8       0
                text3                               4E5      4E5       21        8       0
                text2                               23E      23E       8F        8       0
                text1                               3CE      3CE       6C        8       0
                maintext                            102      102       9E        8       0
                cstackBANK0                          48       48       1F       20       1
                cstackCOMMON                         70       70        6       70       1
                clrtext                             53A      53A        8        8       0
                bssBANK1                             A0       A0       39       A0       1
                bssBANK0                             20       20       28       20       1
                bssCOMMON                            76       76        3       70       1
                nvBANK0                              67       67        9       20       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       16         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text12                              43A      43A       51         0
                text11                              506      506       1E         0
                text10                              351      351       7D         0
                text9                               524      524       16         0
                text8                               1A0      1A0       9E         0
                text7                               2CD      2CD       84         0
                text6                               48B      48B       38         0
                text5                                2B       2B       D7         0
                text4                               4C3      4C3       22         0
                text3                               4E5      4E5       21         0
                text2                               23E      23E       8F         0
                text1                               3CE      3CE       6C         0
                maintext                            102      102       9E         0
                clrtext                             53A      53A        8         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        6         1
                bssCOMMON                            76       76        3         1

        CLASS   BANK0          
                cstackBANK0                          48       48       1F         1
                bssBANK0                             20       20       28         1
                nvBANK0                              67       67        9         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       39         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         
                eeprom_data                           0     2100        8         3



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00053E  000542         8       0  CODE        2
                bssBANK0                       000020  000050  000070        20       1  BANK0       1
                cstackCOMMON                   000070  000009  000079        70       1  COMMON      1
                bssBANK1                       0000A0  000039  0000D9        A0       1  BANK1       1
                config                         002007  000001  002008      400E       0  CONFIG      2
                eeprom_data                    002100  000008  002108      4200       3  EEDATA      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK1            00D9-00EF             17           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0542-1FFF            800
        COMMON           0079-007D              5           1
        CONFIG           2008-2008              1           2
        CONST            0003-0003              1           2
                         0542-1FFF            100
        EEDATA           2108-21FF             F8           2
        ENTRY            0003-0003              1           2
                         0542-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              00D9-00EF             17           1
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0542-1FFF           1ABE
        STRING           0003-0003              1           2
                         0542-1FFF            100

                                  Symbol Table

?_ADC_Read               cstackBANK0  0048
?_CRC16                  cstackBANK0  0048
?___aldiv                cstackBANK0  0048
ADC_Read@adc_ch          cstackBANK0  004A
CRC16@byte_cnt           cstackBANK0  0048
CRC16@ptrByte            cstackBANK0  0053
CRC16@shift_cnt          cstackBANK0  0052
CRC16@w                  cstackBANK0  0054
MODBUS_SLAVE@MODBUS      cstackBANK0  005D
MODBUS_SLAVE@tmp         cstackBANK0  005B
TX_03@MODBUS             cstackBANK0  0055
TX_03@m                  cstackBANK0  0053
TX_03@n                  cstackBANK0  004D
TX_03@tmp                cstackBANK0  004F
TX_03@tmp1               cstackBANK0  0051
TX_16@MODBUS             cstackBANK0  0055
TX_16@count              cstackBANK0  004F
TX_16@i                  cstackBANK0  0050
TX_16@j                  cstackBANK0  0052
TX_16@tmp                cstackBANK0  0053
TX_ERROR@MODBUS          cstackBANK0  0049
TX_ERROR@error_type      cstackCOMMON 0075
TX_FRAME@MODBUS          cstackCOMMON 0075
_ADCON0                  (abs)        001F
_ADCON0bits              (abs)        001F
_ADCON1                  (abs)        009F
_ADC_Read                text11       0506
_ADRESH                  (abs)        001E
_ADRESL                  (abs)        009E
_ANSEL                   (abs)        0188
_ANSELH                  (abs)        0189
_BAUDCTL                 (abs)        0187
_CRC16                   text10       0351
_EEADR                   (abs)        010D
_EECON1                  (abs)        018C
_EEDATA                  (abs)        010C
_Flag_Adc                bssCOMMON    0077
_INTCONbits              (abs)        000B
_MODBUS                  bssBANK1     00A0
_MODBUS_SLAVE            text5        002B
_OPTION_REG              (abs)        0081
_PIE1bits                (abs)        008C
_PIR1                    (abs)        000C
_PIR1bits                (abs)        000C
_PORTB                   (abs)        0006
_PORTBbits               (abs)        0006
_PORTCbits               (abs)        0007
_RCREG                   (abs)        001A
_RCSTA                   (abs)        0018
_RCSTAbits               (abs)        0018
_RD                      (abs)        0C60
_SPBRG                   (abs)        0099
_SPBRGH                  (abs)        009A
_TRISAbits               (abs)        0085
_TRISB                   (abs)        0086
_TRISCbits               (abs)        0087
_TXREG                   (abs)        0019
_TXSTA                   (abs)        0098
_TXSTAbits               (abs)        0098
_TX_03                   text8        01A0
_TX_16                   text7        02CD
_TX_ERROR                text9        0524
_TX_FRAME                text6        048B
_TickAdc                 bssCOMMON    0078
_WR                      (abs)        0C61
__Babs1                  abs1         4210
__Bbank0                 bank0        4210
__Bbank1                 bank1        4210
__Bbank2                 bank2        4210
__Bbank3                 bank3        4210
__BbssBANK0              bssBANK0     4210
__BbssBANK1              bssBANK1     4210
__BbssCOMMON             bssCOMMON    4210
__Bclrtext               clrtext      4210
__Bcode                  code         4210
__Bcommon                common       4210
__BcstackBANK0           cstackBANK0  4210
__BcstackCOMMON          cstackCOMMON 4210
__Beeprom_data           eeprom_data  2100
__Bmaintext              maintext     4210
__BnvBANK0               nvBANK0      4210
__Bram                   ram          4210
__Bsfr0                  sfr0         4210
__Bsfr1                  sfr1         4210
__Bsfr2                  sfr2         4210
__Bsfr3                  sfr3         4210
__Bstrings               strings      4210
__Btext                  text         4210
__CFG_FOSC$HS            (abs)        0000
__CFG_MCLRE$ON           (abs)        0000
__CFG_WDTE$ON            (abs)        0000
__Habs1                  abs1         0010
__Hbank0                 bank0        0010
__Hbank1                 bank1        0010
__Hbank2                 bank2        0010
__Hbank3                 bank3        0010
__HbssBANK0              bssBANK0     0010
__HbssBANK1              bssBANK1     0010
__HbssCOMMON             bssCOMMON    0010
__Hcinit                 cinit        002B
__Hclrtext               clrtext      0010
__Hcode                  code         0010
__Hcommon                common       0010
__Hconfig                config       2008
__HcstackBANK0           cstackBANK0  0010
__HcstackCOMMON          cstackCOMMON 0010
__Heeprom_data           eeprom_data  0008
__Hend_init              end_init     0015
__Hfunctab               functab      0000
__Hidloc                 idloc        0000
__Hinit                  init         0012
__Hintentry              intentry     0012
__Hmaintext              maintext     0010
__HnvBANK0               nvBANK0      0010
__Hpowerup               powerup      0000
__Hram                   ram          0010
__Hreset_vec             reset_vec    0003
__Hsfr0                  sfr0         0010
__Hsfr1                  sfr1         0010
__Hsfr2                  sfr2         0010
__Hsfr3                  sfr3         0010
__Hspace_0               (abs)        2008
__Hspace_1               (abs)        00D9
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0008
__Hstack                 stack        0000
__Hstrings               strings      0010
__Htext                  text         0010
__Labs1                  abs1         0010
__Lbank0                 bank0        0010
__Lbank1                 bank1        0010
__Lbank2                 bank2        0010
__Lbank3                 bank3        0010
__LbssBANK0              bssBANK0     0010
__LbssBANK1              bssBANK1     0010
__LbssCOMMON             bssCOMMON    0010
__Lcinit                 cinit        0015
__Lclrtext               clrtext      0010
__Lcode                  code         0010
__Lcommon                common       0010
__Lconfig                config       2007
__LcstackBANK0           cstackBANK0  0010
__LcstackCOMMON          cstackCOMMON 0010
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0012
__Lfunctab               functab      0000
__Lidloc                 idloc        0000
__Linit                  init         0012
__Lintentry              intentry     0004
__Lmaintext              maintext     0010
__LnvBANK0               nvBANK0      0010
__Lpowerup               powerup      0000
__Lram                   ram          0010
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0010
__Lsfr1                  sfr1         0010
__Lsfr2                  sfr2         0010
__Lsfr3                  sfr3         0010
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0010
__Ltext                  text         0010
__S0                     (abs)        2008
__S1                     (abs)        00D9
__S2                     (abs)        0000
__S3                     (abs)        2108
___aldiv                 text2        023E
___aldiv@counter         cstackBANK0  0050
___aldiv@dividend        cstackBANK0  004C
___aldiv@divisor         cstackBANK0  0048
___aldiv@quotient        cstackBANK0  0052
___aldiv@sign            cstackBANK0  0051
___int_sp                stack        0000
___latbits               (abs)        0002
___sp                    stack        0000
__end_of_ADC_Read        text11       0524
__end_of_CRC16           text10       03CE
__end_of_MODBUS_SLAVE    text5        0102
__end_of_TX_03           text8        023E
__end_of_TX_16           text7        0351
__end_of_TX_ERROR        text9        053A
__end_of_TX_FRAME        text6        04C3
__end_of___aldiv         text2        02CD
__end_of__initialization cinit        0027
__end_of_eeprom_read     text4        04E5
__end_of_isr             text12       048B
__end_of_main            maintext     01A0
__end_of_pic_init        text3        0506
__end_of_uart_init       text1        043A
__initialization         cinit        0015
__pbssBANK0              bssBANK0     0020
__pbssBANK1              bssBANK1     00A0
__pbssCOMMON             bssCOMMON    0076
__pcstackBANK0           cstackBANK0  0048
__pcstackCOMMON          cstackCOMMON 0070
__pintentry              intentry     0004
__pmaintext              maintext     0102
__pnvBANK0               nvBANK0      0067
__ptext1                 text1        03CE
__ptext10                text10       0351
__ptext11                text11       0506
__ptext12                text12       043A
__ptext2                 text2        023E
__ptext3                 text3        04E5
__ptext4                 text4        04C3
__ptext5                 text5        002B
__ptext6                 text6        048B
__ptext7                 text7        02CD
__ptext8                 text8        01A0
__ptext9                 text9        0524
__size_of_ADC_Read       (abs)        0000
__size_of_CRC16          (abs)        0000
__size_of_MODBUS_SLAVE   (abs)        0000
__size_of_TX_03          (abs)        0000
__size_of_TX_16          (abs)        0000
__size_of_TX_ERROR       (abs)        0000
__size_of_TX_FRAME       (abs)        0000
__size_of___aldiv        (abs)        0000
__size_of_eeprom_read    (abs)        0000
__size_of_isr            (abs)        0000
__size_of_main           (abs)        0000
__size_of_pic_init       (abs)        0000
__size_of_uart_init      (abs)        0000
_adc_ch0                 nvBANK0      006D
_adc_ch1                 nvBANK0      006B
_adc_ch2                 nvBANK0      0069
_adc_ch3                 nvBANK0      0067
_addr                    nvBANK0      006F
_eeprom_read             text4        04C3
_isr                     text12       043A
_main                    maintext     0102
_pic_init                text3        04E5
_res_table               bssBANK0     0020
_uart_init               text1        03CE
btemp                    (abs)        007E
clear_ram0               clrtext      053A
eeprom_read@addr         cstackBANK0  0048
end_of_initialization    cinit        0027
interrupt_function       intentry     0004
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
reset_vec                reset_vec    0000
saved_w                  (abs)        007E
stackhi                  (abs)        0000
stacklo                  (abs)        0000
start                    init         0012
start_initialization     cinit        0015
uart_init@bRate          cstackBANK0  0064
uart_init@baud           cstackBANK0  0056
wtemp0                   (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 75 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    4
 This function calls:
		_ADC_Read
		_MODBUS_SLAVE
		_eeprom_read
		_pic_init
		_uart_init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _uart_init *****************
 Defined at:
		line 8 in file "uart_init.c"
 Parameters:    Size  Location     Type
  baud            2   14[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  bRate           2   28[BANK0 ] struct .
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0      12       0       0       0
      Totals:         0      16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___aldiv
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK0 ] long 
  dividend        4    4[BANK0 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   10[BANK0 ] long 
  sign            1    9[BANK0 ] unsigned char 
  counter         1    8[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       6       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1      14       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_uart_init
 This function uses a non-reentrant model


 *************** function _pic_init *****************
 Defined at:
		line 9 in file "init.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _eeprom_read *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic\eeread.c"
 Parameters:    Size  Location     Type
  addr            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  addr            1    0[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       1       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _MODBUS_SLAVE *****************
 Defined at:
		line 12 in file "modbus.c"
 Parameters:    Size  Location     Type
  MODBUS          1    wreg     PTR struct .
		 -> MODBUS(57), 
 Auto vars:     Size  Location     Type
  MODBUS          1   21[BANK0 ] PTR struct .
		 -> MODBUS(57), 
  tmp             2   19[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_CRC16
		_TX_03
		_TX_16
		_TX_ERROR
		_TX_FRAME
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _TX_FRAME *****************
 Defined at:
		line 116 in file "modbus.c"
 Parameters:    Size  Location     Type
  MODBUS          1    wreg     PTR struct .
		 -> MODBUS(57), 
 Auto vars:     Size  Location     Type
  MODBUS          1    5[COMMON] PTR struct .
		 -> MODBUS(57), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         1       2       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_MODBUS_SLAVE
 This function uses a non-reentrant model


 *************** function _TX_16 *****************
 Defined at:
		line 89 in file "modbus.c"
 Parameters:    Size  Location     Type
  MODBUS          1    wreg     PTR struct .
		 -> MODBUS(57), 
 Auto vars:     Size  Location     Type
  MODBUS          1   13[BANK0 ] PTR struct .
		 -> MODBUS(57), 
  i               2    8[BANK0 ] unsigned int 
  tmp             2   11[BANK0 ] unsigned int 
  j               1   10[BANK0 ] unsigned char 
  count           1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_TX_ERROR
 This function is called by:
		_MODBUS_SLAVE
 This function uses a non-reentrant model


 *************** function _TX_03 *****************
 Defined at:
		line 53 in file "modbus.c"
 Parameters:    Size  Location     Type
  MODBUS          1    wreg     PTR struct .
		 -> MODBUS(57), 
 Auto vars:     Size  Location     Type
  MODBUS          1   13[BANK0 ] PTR struct .
		 -> MODBUS(57), 
  m               2   11[BANK0 ] unsigned int 
  tmp1            2    9[BANK0 ] unsigned int 
  tmp             2    7[BANK0 ] unsigned int 
  n               2    5[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       9       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_TX_ERROR
 This function is called by:
		_MODBUS_SLAVE
 This function uses a non-reentrant model


 *************** function _TX_ERROR *****************
 Defined at:
		line 133 in file "modbus.c"
 Parameters:    Size  Location     Type
  MODBUS          1    wreg     PTR struct .
		 -> MODBUS(57), 
  error_type      1    5[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  MODBUS          1    1[BANK0 ] PTR struct .
		 -> MODBUS(57), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         1       2       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_MODBUS_SLAVE
		_TX_03
		_TX_16
 This function uses a non-reentrant model


 *************** function _CRC16 *****************
 Defined at:
		line 145 in file "modbus.c"
 Parameters:    Size  Location     Type
  ptrByte         1    wreg     PTR unsigned char 
		 -> MODBUS(57), 
  byte_cnt        2    0[BANK0 ] int 
 Auto vars:     Size  Location     Type
  ptrByte         1   11[BANK0 ] PTR unsigned char 
		 -> MODBUS(57), 
  w               2   12[BANK0 ] unsigned int 
  shift_cnt       1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       8       0       0       0
      Totals:         0      14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_MODBUS_SLAVE
 This function uses a non-reentrant model


 *************** function _ADC_Read *****************
 Defined at:
		line 60 in file "main.c"
 Parameters:    Size  Location     Type
  adc_ch          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  adc_ch          1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       1       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       3       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 23 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          5       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c
		___aldiv       		CODE           	023E	0000	144

C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\aldiv.c estimated size: 144

modbus.c
		_TX_FRAME      		CODE           	048B	0000	57
		_TX_16         		CODE           	02CD	0000	133
		_TX_ERROR      		CODE           	0524	0000	23
		_MODBUS_SLAVE  		CODE           	002B	0000	216
		_TX_03         		CODE           	01A0	0000	159
		_CRC16         		CODE           	0351	0000	126

modbus.c estimated size: 714

shared
		__initialization		CODE           	0015	0000	19

shared estimated size: 19

uart_init.c
		_uart_init     		CODE           	03CE	0000	109

uart_init.c estimated size: 109

init.c
		_pic_init      		CODE           	04E5	0000	34

init.c estimated size: 34

main.c
		_main          		CODE           	0102	0000	159
		_isr           		CODE           	043A	0000	82
		_ADC_Read      		CODE           	0506	0000	31

main.c estimated size: 272

C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic\eeread.c
		_eeprom_read   		CODE           	04C3	0000	35

C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic\eeread.c estimated size: 35

