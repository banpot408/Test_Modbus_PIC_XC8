

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 15 10:33:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	eeprom_data,global,class=EEDATA,space=3,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217                           
   218                           	psect	eeprom_data
   219  0000  0001 0025 0080 00FF 00FF 00FF 00FF 00FF 	db	1,37,128,255,255,255,255,255	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0000                     	;# 
   455  0001                     	;# 
   456  0002                     	;# 
   457  0003                     	;# 
   458  0004                     	;# 
   459  0005                     	;# 
   460  0006                     	;# 
   461  0007                     	;# 
   462  0008                     	;# 
   463  0009                     	;# 
   464  000A                     	;# 
   465  000B                     	;# 
   466  000C                     	;# 
   467  000D                     	;# 
   468  000E                     	;# 
   469  000E                     	;# 
   470  000F                     	;# 
   471  0010                     	;# 
   472  0011                     	;# 
   473  0012                     	;# 
   474  0013                     	;# 
   475  0014                     	;# 
   476  0015                     	;# 
   477  0015                     	;# 
   478  0016                     	;# 
   479  0017                     	;# 
   480  0018                     	;# 
   481  0019                     	;# 
   482  001A                     	;# 
   483  001B                     	;# 
   484  001B                     	;# 
   485  001C                     	;# 
   486  001D                     	;# 
   487  001E                     	;# 
   488  001F                     	;# 
   489  0081                     	;# 
   490  0085                     	;# 
   491  0086                     	;# 
   492  0087                     	;# 
   493  0088                     	;# 
   494  0089                     	;# 
   495  008C                     	;# 
   496  008D                     	;# 
   497  008E                     	;# 
   498  008F                     	;# 
   499  0090                     	;# 
   500  0091                     	;# 
   501  0092                     	;# 
   502  0093                     	;# 
   503  0093                     	;# 
   504  0093                     	;# 
   505  0094                     	;# 
   506  0095                     	;# 
   507  0096                     	;# 
   508  0097                     	;# 
   509  0098                     	;# 
   510  0099                     	;# 
   511  009A                     	;# 
   512  009B                     	;# 
   513  009C                     	;# 
   514  009D                     	;# 
   515  009E                     	;# 
   516  009F                     	;# 
   517  0105                     	;# 
   518  0107                     	;# 
   519  0108                     	;# 
   520  0109                     	;# 
   521  010C                     	;# 
   522  010C                     	;# 
   523  010D                     	;# 
   524  010E                     	;# 
   525  010F                     	;# 
   526  0185                     	;# 
   527  0187                     	;# 
   528  0188                     	;# 
   529  0189                     	;# 
   530  018C                     	;# 
   531  018D                     	;# 
   532                           
   533                           	psect	nvBANK0
   534  0060                     __pnvBANK0:
   535  0060                     _adc_ch3:
   536  0060                     	ds	2
   537  0062                     _adc_ch2:
   538  0062                     	ds	2
   539  0064                     _adc_ch1:
   540  0064                     	ds	2
   541  0066                     _adc_ch0:
   542  0066                     	ds	2
   543  0068                     _addr:
   544  0068                     	ds	1
   545  0018                     _RCSTA	set	24
   546  0019                     _TXREG	set	25
   547  0006                     _PORTBbits	set	6
   548  001E                     _ADRESH	set	30
   549  000C                     _PIR1	set	12
   550  001A                     _RCREG	set	26
   551  0018                     _RCSTAbits	set	24
   552  000C                     _PIR1bits	set	12
   553  000B                     _INTCONbits	set	11
   554  001F                     _ADCON0bits	set	31
   555  001F                     _ADCON0	set	31
   556  0006                     _PORTB	set	6
   557  0007                     _PORTCbits	set	7
   558  0099                     _SPBRG	set	153
   559  009A                     _SPBRGH	set	154
   560  0098                     _TXSTA	set	152
   561  0098                     _TXSTAbits	set	152
   562  008C                     _PIE1bits	set	140
   563  009E                     _ADRESL	set	158
   564  0081                     _OPTION_REG	set	129
   565  009F                     _ADCON1	set	159
   566  0086                     _TRISB	set	134
   567  0085                     _TRISAbits	set	133
   568  0087                     _TRISCbits	set	135
   569  010C                     _EEDATA	set	268
   570  010D                     _EEADR	set	269
   571  018C                     _EECON1	set	396
   572  018C                     _EECON1bits	set	396
   573  0187                     _BAUDCTL	set	391
   574  0189                     _ANSELH	set	393
   575  0188                     _ANSEL	set	392
   576                           
   577                           	psect	cinit
   578  07EB                     start_initialization:	
   579                           ; #config settings
   580                           
   581  07EB                     __initialization:
   582                           
   583                           ; Clear objects allocated to BANK0
   584  07EB  1383               	bcf	3,7	;select IRP bank0
   585  07EC  3020               	movlw	low __pbssBANK0
   586  07ED  0084               	movwf	4
   587  07EE  304B               	movlw	low (__pbssBANK0+43)
   588  07EF  120A  118A  22F9  120A  118A  	fcall	clear_ram0
   589                           
   590                           ; Clear objects allocated to BANK1
   591  07F4  30A0               	movlw	low __pbssBANK1
   592  07F5  0084               	movwf	4
   593  07F6  30D9               	movlw	low (__pbssBANK1+57)
   594  07F7  120A  118A  22F9  120A  118A  	fcall	clear_ram0
   595  07FC                     end_of_initialization:	
   596                           ;End of C runtime variable initialization code
   597                           
   598  07FC                     __end_of__initialization:
   599  07FC  0183               	clrf	3
   600  07FD  120A  118A  2DA6   	ljmp	_main	;jump to C main() function
   601                           
   602                           	psect	bssBANK0
   603  0020                     __pbssBANK0:
   604  0020                     _res_table:
   605  0020                     	ds	40
   606  0048                     _Flag_Ch_Adc:
   607  0048                     	ds	1
   608  0049                     _Flag_Adc:
   609  0049                     	ds	1
   610  004A                     _TickAdc:
   611  004A                     	ds	1
   612                           
   613                           	psect	bssBANK1
   614  00A0                     __pbssBANK1:
   615  00A0                     _MODBUS:
   616  00A0                     	ds	57
   617                           
   618                           	psect	clrtext
   619  02F9                     clear_ram0:	
   620                           ;	Called with FSR containing the base address, and
   621                           ;	W with the last address+1
   622                           
   623  02F9  0064               	clrwdt	;clear the watchdog before getting into this loop
   624  02FA                     clrloop0:
   625  02FA  0180               	clrf	0	;clear RAM location pointed to by FSR
   626  02FB  0A84               	incf	4,f	;increment pointer
   627  02FC  0604               	xorwf	4,w	;XOR with final address
   628  02FD  1903               	btfsc	3,2	;have we reached the end yet?
   629  02FE  3400               	retlw	0	;all done for this memory range, return
   630  02FF  0604               	xorwf	4,w	;XOR again to restore value
   631  0300  2AFA               	goto	clrloop0	;do the next byte
   632                           
   633                           	psect	cstackCOMMON
   634  0070                     __pcstackCOMMON:
   635  0070                     ?_eeprom_read:
   636  0070                     ??_eeprom_read:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_MODBUS_SLAVE:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_TX_03:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_TX_16:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_TX_ERROR:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_TX_FRAME:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ??_TX_FRAME:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?_pic_init:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ??_pic_init:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_main:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_CRC16:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_ADC_Read:	
   670                           ; 2 bytes @ 0x0
   671                           
   672  0070                     ?___aldiv:	
   673                           ; 2 bytes @ 0x0
   674                           
   675  0070                     TX_ERROR@error_type:	
   676                           ; 4 bytes @ 0x0
   677                           
   678  0070                     CRC16@byte_cnt:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ___aldiv@divisor:	
   682                           ; 2 bytes @ 0x0
   683                           
   684                           
   685                           ; 4 bytes @ 0x0
   686  0070                     	ds	1
   687  0071                     ??_TX_ERROR:
   688  0071                     eeprom_read@addr:	
   689                           ; 1 bytes @ 0x1
   690                           
   691                           
   692                           ; 1 bytes @ 0x1
   693  0071                     	ds	1
   694  0072                     ??_CRC16:
   695  0072                     ??_ADC_Read:	
   696                           ; 1 bytes @ 0x2
   697                           
   698  0072                     TX_FRAME@MODBUS:	
   699                           ; 1 bytes @ 0x2
   700                           
   701  0072                     TX_ERROR@MODBUS:	
   702                           ; 1 bytes @ 0x2
   703                           
   704                           
   705                           ; 1 bytes @ 0x2
   706  0072                     	ds	1
   707  0073                     ??_TX_03:
   708  0073                     ??_TX_16:	
   709                           ; 1 bytes @ 0x3
   710                           
   711  0073                     ADC_Read@adc_ch:	
   712                           ; 1 bytes @ 0x3
   713                           
   714                           
   715                           ; 1 bytes @ 0x3
   716  0073                     	ds	1
   717  0074                     ___aldiv@dividend:
   718                           
   719                           ; 4 bytes @ 0x4
   720  0074                     	ds	4
   721  0078                     ??___aldiv:
   722                           
   723                           ; 1 bytes @ 0x8
   724  0078                     	ds	1
   725  0079                     uart_init@bRate:
   726                           
   727                           ; 2 bytes @ 0x9
   728  0079                     	ds	1
   729  007A                     CRC16@shift_cnt:
   730                           
   731                           ; 1 bytes @ 0xA
   732  007A                     	ds	1
   733  007B                     CRC16@ptrByte:
   734                           
   735                           ; 1 bytes @ 0xB
   736  007B                     	ds	1
   737  007C                     CRC16@w:
   738                           
   739                           ; 2 bytes @ 0xC
   740  007C                     	ds	2
   741                           
   742                           	psect	cstackBANK0
   743  004B                     __pcstackBANK0:
   744  004B                     ___aldiv@counter:
   745  004B                     TX_03@n:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  004B                     TX_16@i:	
   749                           ; 2 bytes @ 0x0
   750                           
   751                           
   752                           ; 2 bytes @ 0x0
   753  004B                     	ds	1
   754  004C                     ___aldiv@sign:
   755                           
   756                           ; 1 bytes @ 0x1
   757  004C                     	ds	1
   758  004D                     TX_16@count:
   759  004D                     TX_03@tmp:	
   760                           ; 1 bytes @ 0x2
   761                           
   762  004D                     ___aldiv@quotient:	
   763                           ; 2 bytes @ 0x2
   764                           
   765                           
   766                           ; 4 bytes @ 0x2
   767  004D                     	ds	1
   768  004E                     TX_16@j:
   769                           
   770                           ; 1 bytes @ 0x3
   771  004E                     	ds	1
   772  004F                     TX_03@tmp1:
   773  004F                     TX_16@tmp:	
   774                           ; 2 bytes @ 0x4
   775                           
   776                           
   777                           ; 2 bytes @ 0x4
   778  004F                     	ds	2
   779  0051                     ?_uart_init:
   780  0051                     TX_16@MODBUS:	
   781                           ; 1 bytes @ 0x6
   782                           
   783  0051                     TX_03@m:	
   784                           ; 1 bytes @ 0x6
   785                           
   786  0051                     uart_init@baud:	
   787                           ; 2 bytes @ 0x6
   788                           
   789                           
   790                           ; 2 bytes @ 0x6
   791  0051                     	ds	2
   792  0053                     ??_uart_init:
   793  0053                     TX_03@MODBUS:	
   794                           ; 1 bytes @ 0x8
   795                           
   796                           
   797                           ; 1 bytes @ 0x8
   798  0053                     	ds	1
   799  0054                     ??_MODBUS_SLAVE:
   800                           
   801                           ; 1 bytes @ 0x9
   802  0054                     	ds	5
   803  0059                     MODBUS_SLAVE@tmp:
   804                           
   805                           ; 2 bytes @ 0xE
   806  0059                     	ds	2
   807  005B                     MODBUS_SLAVE@MODBUS:
   808                           
   809                           ; 1 bytes @ 0x10
   810  005B                     	ds	4
   811  005F                     ??_main:
   812                           
   813                           ; 1 bytes @ 0x14
   814  005F                     	ds	1
   815                           
   816                           	psect	maintext
   817  05A6                     __pmaintext:	
   818 ;;
   819 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   820 ;;
   821 ;; *************** function _main *****************
   822 ;; Defined at:
   823 ;;		line 75 in file "main.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : B00/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   837 ;;      Params:         0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0
   839 ;;      Temps:          0       1       0       0       0
   840 ;;      Totals:         0       1       0       0       0
   841 ;;Total ram usage:        1 bytes
   842 ;; Hardware stack levels required when called:    3
   843 ;; This function calls:
   844 ;;		_ADC_Read
   845 ;;		_MODBUS_SLAVE
   846 ;;		_eeprom_read
   847 ;;		_pic_init
   848 ;;		_uart_init
   849 ;; This function is called by:
   850 ;;		Startup code after reset
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _main
   856  05A6                     _main:
   857  05A6                     l1403:	
   858                           ;incstack = 0
   859                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   860                           
   861                           
   862                           ;main.c: 76:     pic_init();
   863  05A6  120A  118A  234A  120A  118A  	fcall	_pic_init
   864                           
   865                           ;main.c: 77:     uart_init(9600);
   866  05AB  3080               	movlw	128
   867  05AC  1283               	bcf	3,5	;RP0=0, select bank0
   868  05AD  1303               	bcf	3,6	;RP1=0, select bank0
   869  05AE  00D1               	movwf	uart_init@baud
   870  05AF  3025               	movlw	37
   871  05B0  00D2               	movwf	uart_init@baud+1
   872  05B1  120A  118A  23A7  120A  118A  	fcall	_uart_init
   873  05B6                     l1405:
   874                           
   875                           ;main.c: 78:     INTCONbits.T0IE=1;
   876  05B6  168B               	bsf	11,5	;volatile
   877  05B7                     l1407:
   878                           
   879                           ;main.c: 79:     INTCONbits.GIE=1;
   880  05B7  178B               	bsf	11,7	;volatile
   881  05B8                     l1409:
   882                           
   883                           ;main.c: 80:     INTCONbits.PEIE=1;
   884  05B8  170B               	bsf	11,6	;volatile
   885  05B9                     l1411:
   886                           
   887                           ;main.c: 81:     PIE1bits.RCIE=1;
   888  05B9  1683               	bsf	3,5	;RP0=1, select bank1
   889  05BA  1303               	bcf	3,6	;RP1=0, select bank1
   890  05BB  168C               	bsf	12,5	;volatile
   891  05BC                     l1413:
   892                           
   893                           ;main.c: 82:     PIE1bits.TXIE=0;
   894  05BC  120C               	bcf	12,4	;volatile
   895  05BD                     l1415:
   896                           
   897                           ;main.c: 83:     MODBUS.delay=3;
   898  05BD  3003               	movlw	3
   899  05BE  1283               	bcf	3,5	;RP0=0, select bank0
   900  05BF  1303               	bcf	3,6	;RP1=0, select bank0
   901  05C0  00DF               	movwf	??_main
   902  05C1  085F               	movf	??_main,w
   903  05C2  1683               	bsf	3,5	;RP0=1, select bank1
   904  05C3  1303               	bcf	3,6	;RP1=0, select bank1
   905  05C4  00D7               	movwf	(_MODBUS^(0+128)+55)
   906  05C5                     l1417:
   907                           
   908                           ;main.c: 84:     addr=eeprom_read(0);
   909  05C5  3000               	movlw	0
   910  05C6  120A  118A  2315  120A  118A  	fcall	_eeprom_read
   911  05CB  1283               	bcf	3,5	;RP0=0, select bank0
   912  05CC  1303               	bcf	3,6	;RP1=0, select bank0
   913  05CD  00DF               	movwf	??_main
   914  05CE  085F               	movf	??_main,w
   915  05CF  00E8               	movwf	_addr
   916                           
   917                           ;main.c: 85:     res_table[0].byte.LB=addr;
   918  05D0  0868               	movf	_addr,w
   919  05D1  00DF               	movwf	??_main
   920  05D2  085F               	movf	??_main,w
   921  05D3  00A0               	movwf	_res_table
   922  05D4                     l1419:
   923                           
   924                           ;main.c: 86:     res_table[1].byte.HB=eeprom_read(1);
   925  05D4  3001               	movlw	1
   926  05D5  120A  118A  2315  120A  118A  	fcall	_eeprom_read
   927  05DA  1283               	bcf	3,5	;RP0=0, select bank0
   928  05DB  1303               	bcf	3,6	;RP1=0, select bank0
   929  05DC  00DF               	movwf	??_main
   930  05DD  085F               	movf	??_main,w
   931  05DE  00A3               	movwf	_res_table+3
   932  05DF                     l1421:
   933                           
   934                           ;main.c: 87:     res_table[1].byte.LB=eeprom_read(2);
   935  05DF  3002               	movlw	2
   936  05E0  120A  118A  2315  120A  118A  	fcall	_eeprom_read
   937  05E5  1283               	bcf	3,5	;RP0=0, select bank0
   938  05E6  1303               	bcf	3,6	;RP1=0, select bank0
   939  05E7  00DF               	movwf	??_main
   940  05E8  085F               	movf	??_main,w
   941  05E9  00A2               	movwf	_res_table+2
   942  05EA                     l102:	
   943                           ;main.c: 89:     while(1){
   944                           
   945  05EA  0064               	clrwdt	;# 
   946  05EB                     l1423:
   947                           
   948                           ;main.c: 92:         adc_ch0 = ADC_Read(0);
   949  05EB  3000               	movlw	0
   950  05EC  120A  118A  232C  120A  118A  	fcall	_ADC_Read
   951  05F1  0871               	movf	?_ADC_Read+1,w
   952  05F2  1283               	bcf	3,5	;RP0=0, select bank0
   953  05F3  1303               	bcf	3,6	;RP1=0, select bank0
   954  05F4  00E7               	movwf	_adc_ch0+1
   955  05F5  0870               	movf	?_ADC_Read,w
   956  05F6  00E6               	movwf	_adc_ch0
   957  05F7                     l1425:
   958                           
   959                           ;main.c: 93:         adc_ch1 = ADC_Read(1);
   960  05F7  3001               	movlw	1
   961  05F8  120A  118A  232C  120A  118A  	fcall	_ADC_Read
   962  05FD  0871               	movf	?_ADC_Read+1,w
   963  05FE  1283               	bcf	3,5	;RP0=0, select bank0
   964  05FF  1303               	bcf	3,6	;RP1=0, select bank0
   965  0600  00E5               	movwf	_adc_ch1+1
   966  0601  0870               	movf	?_ADC_Read,w
   967  0602  00E4               	movwf	_adc_ch1
   968  0603                     l1427:
   969                           
   970                           ;main.c: 94:         adc_ch2 = ADC_Read(2);
   971  0603  3002               	movlw	2
   972  0604  120A  118A  232C  120A  118A  	fcall	_ADC_Read
   973  0609  0871               	movf	?_ADC_Read+1,w
   974  060A  1283               	bcf	3,5	;RP0=0, select bank0
   975  060B  1303               	bcf	3,6	;RP1=0, select bank0
   976  060C  00E3               	movwf	_adc_ch2+1
   977  060D  0870               	movf	?_ADC_Read,w
   978  060E  00E2               	movwf	_adc_ch2
   979  060F                     l1429:
   980                           
   981                           ;main.c: 95:         adc_ch3 = ADC_Read(3);
   982  060F  3003               	movlw	3
   983  0610  120A  118A  232C  120A  118A  	fcall	_ADC_Read
   984  0615  0871               	movf	?_ADC_Read+1,w
   985  0616  1283               	bcf	3,5	;RP0=0, select bank0
   986  0617  1303               	bcf	3,6	;RP1=0, select bank0
   987  0618  00E1               	movwf	_adc_ch3+1
   988  0619  0870               	movf	?_ADC_Read,w
   989  061A  00E0               	movwf	_adc_ch3
   990                           
   991                           ;main.c: 97:         res_table[0].Val = adc_ch0;
   992  061B  0867               	movf	_adc_ch0+1,w
   993  061C  00A1               	movwf	_res_table+1
   994  061D  0866               	movf	_adc_ch0,w
   995  061E  00A0               	movwf	_res_table
   996                           
   997                           ;main.c: 98:         res_table[1].Val = adc_ch1;
   998  061F  0865               	movf	_adc_ch1+1,w
   999  0620  00A3               	movwf	_res_table+3
  1000  0621  0864               	movf	_adc_ch1,w
  1001  0622  00A2               	movwf	_res_table+2
  1002                           
  1003                           ;main.c: 99:         res_table[2].Val = adc_ch2;
  1004  0623  0863               	movf	_adc_ch2+1,w
  1005  0624  00A5               	movwf	_res_table+5
  1006  0625  0862               	movf	_adc_ch2,w
  1007  0626  00A4               	movwf	_res_table+4
  1008                           
  1009                           ;main.c: 100:         res_table[3].Val = adc_ch3;
  1010  0627  0861               	movf	_adc_ch3+1,w
  1011  0628  00A7               	movwf	_res_table+7
  1012  0629  0860               	movf	_adc_ch3,w
  1013  062A  00A6               	movwf	_res_table+6
  1014  062B                     l1431:
  1015                           
  1016                           ;main.c: 125:         if (MODBUS.rxgap){
  1017  062B  1683               	bsf	3,5	;RP0=1, select bank1
  1018  062C  1303               	bcf	3,6	;RP1=0, select bank1
  1019  062D  0856               	movf	(_MODBUS^(0+128)+54),w
  1020  062E  1903               	btfsc	3,2
  1021  062F  2E31               	goto	u921
  1022  0630  2E32               	goto	u920
  1023  0631                     u921:
  1024  0631  2E3B               	goto	l1437
  1025  0632                     u920:
  1026  0632                     l1433:
  1027                           
  1028                           ;main.c: 126:             MODBUS_SLAVE(&MODBUS);
  1029  0632  30A0               	movlw	(low (_MODBUS| 0))& (0+255)
  1030  0633  120A  118A  2707  120A  118A  	fcall	_MODBUS_SLAVE
  1031  0638                     l1435:
  1032                           
  1033                           ;main.c: 127:             MODBUS.rxgap=0;
  1034  0638  1683               	bsf	3,5	;RP0=1, select bank1
  1035  0639  1303               	bcf	3,6	;RP1=0, select bank1
  1036  063A  01D6               	clrf	(_MODBUS^(0+128)+54)
  1037  063B                     l1437:
  1038                           
  1039                           ;main.c: 130:         if (MODBUS.write){
  1040  063B  0858               	movf	(_MODBUS^(0+128)+56),w
  1041  063C  1903               	btfsc	3,2
  1042  063D  2E3F               	goto	u931
  1043  063E  2E40               	goto	u930
  1044  063F                     u931:
  1045  063F  2DEA               	goto	l102
  1046  0640                     u930:
  1047  0640                     l1439:
  1048                           
  1049                           ;main.c: 132:             if(res_table[4].bits.b0){
  1050  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0641  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0642  1C28               	btfss	_res_table+8,0
  1053  0643  2E45               	goto	u941
  1054  0644  2E46               	goto	u940
  1055  0645                     u941:
  1056  0645  2E48               	goto	l105
  1057  0646                     u940:
  1058  0646                     l1441:
  1059                           
  1060                           ;main.c: 133:                 PORTBbits.RB0 = 1 ;
  1061  0646  1406               	bsf	6,0	;volatile
  1062                           
  1063                           ;main.c: 134:             }else{
  1064  0647  2DEA               	goto	l102
  1065  0648                     l105:
  1066                           
  1067                           ;main.c: 135:                 PORTBbits.RB0 = 0 ;
  1068  0648  1006               	bcf	6,0	;volatile
  1069  0649  2DEA               	goto	l102
  1070  064A  120A  118A  2800   	ljmp	start
  1071  064D                     __end_of_main:
  1072                           
  1073                           	psect	text1
  1074  03A7                     __ptext1:	
  1075 ;; *************** function _uart_init *****************
  1076 ;; Defined at:
  1077 ;;		line 8 in file "uart_init.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;  baud            2    6[BANK0 ] unsigned int 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  bRate           2    9[COMMON] struct .
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       2       0       0       0
  1092 ;;      Locals:         2       0       0       0       0
  1093 ;;      Temps:          0      12       0       0       0
  1094 ;;      Totals:         2      14       0       0       0
  1095 ;;Total ram usage:       16 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    1
  1098 ;; This function calls:
  1099 ;;		___aldiv
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           
  1106                           ;psect for function _uart_init
  1107  03A7                     _uart_init:
  1108  03A7                     l1299:	
  1109                           ;incstack = 0
  1110                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
  1111                           
  1112                           
  1113                           ;uart_init.c: 10:     TRISCbits.TRISC7=1;
  1114  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  1115  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  1116  03A9  1787               	bsf	7,7	;volatile
  1117                           
  1118                           ;uart_init.c: 11:     TRISCbits.TRISC6=0;
  1119  03AA  1307               	bcf	7,6	;volatile
  1120                           
  1121                           ;uart_init.c: 12:     PORTCbits.RC6=1;
  1122  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  1123  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  1124  03AD  1707               	bsf	7,6	;volatile
  1125  03AE                     l1301:
  1126                           
  1127                           ;uart_init.c: 14:     WORD_VAL bRate;;uart_init.c: 15:     bRate.Val=(unsigned int) ((20
      +                          000000L + baud*2) / (baud*4) - 1);
  1128  03AE  0852               	movf	uart_init@baud+1,w
  1129  03AF  00D4               	movwf	??_uart_init+1
  1130  03B0  0851               	movf	uart_init@baud,w
  1131  03B1  00D3               	movwf	??_uart_init
  1132  03B2  1003               	clrc
  1133  03B3  0DD3               	rlf	??_uart_init,f
  1134  03B4  0DD4               	rlf	??_uart_init+1,f
  1135  03B5  1003               	clrc
  1136  03B6  0DD3               	rlf	??_uart_init,f
  1137  03B7  0DD4               	rlf	??_uart_init+1,f
  1138  03B8  0853               	movf	??_uart_init,w
  1139  03B9  00F0               	movwf	___aldiv@divisor
  1140  03BA  0854               	movf	??_uart_init+1,w
  1141  03BB  00F1               	movwf	___aldiv@divisor+1
  1142  03BC  01F2               	clrf	___aldiv@divisor+2
  1143  03BD  01F3               	clrf	___aldiv@divisor+3
  1144  03BE  3000               	movlw	0
  1145  03BF  00D5               	movwf	??_uart_init+2
  1146  03C0  302D               	movlw	45
  1147  03C1  00D6               	movwf	??_uart_init+3
  1148  03C2  3031               	movlw	49
  1149  03C3  00D7               	movwf	??_uart_init+4
  1150  03C4  3001               	movlw	1
  1151  03C5  00D8               	movwf	??_uart_init+5
  1152  03C6  0852               	movf	uart_init@baud+1,w
  1153  03C7  00DA               	movwf	??_uart_init+7
  1154  03C8  0851               	movf	uart_init@baud,w
  1155  03C9  00D9               	movwf	??_uart_init+6
  1156  03CA  1003               	clrc
  1157  03CB  0DD9               	rlf	??_uart_init+6,f
  1158  03CC  0DDA               	rlf	??_uart_init+7,f
  1159  03CD  0859               	movf	??_uart_init+6,w
  1160  03CE  00DB               	movwf	??_uart_init+8
  1161  03CF  085A               	movf	??_uart_init+7,w
  1162  03D0  00DC               	movwf	??_uart_init+9
  1163  03D1  01DD               	clrf	??_uart_init+10
  1164  03D2  01DE               	clrf	??_uart_init+11
  1165  03D3  085B               	movf	??_uart_init+8,w
  1166  03D4  07D5               	addwf	??_uart_init+2,f
  1167  03D5  085C               	movf	??_uart_init+9,w
  1168  03D6  1803               	skipnc
  1169  03D7  0F5C               	incfsz	??_uart_init+9,w
  1170  03D8  2BDA               	goto	u750
  1171  03D9  2BDB               	goto	u751
  1172  03DA                     u750:
  1173  03DA  07D6               	addwf	??_uart_init+3,f
  1174  03DB                     u751:
  1175  03DB  085D               	movf	??_uart_init+10,w
  1176  03DC  1803               	skipnc
  1177  03DD  0F5D               	incfsz	??_uart_init+10,w
  1178  03DE  2BE0               	goto	u752
  1179  03DF  2BE1               	goto	u753
  1180  03E0                     u752:
  1181  03E0  07D7               	addwf	??_uart_init+4,f
  1182  03E1                     u753:
  1183  03E1  085E               	movf	??_uart_init+11,w
  1184  03E2  1803               	skipnc
  1185  03E3  0A5E               	incf	??_uart_init+11,w
  1186  03E4  07D8               	addwf	??_uart_init+5,f
  1187  03E5  0858               	movf	??_uart_init+5,w
  1188  03E6  00F7               	movwf	___aldiv@dividend+3
  1189  03E7  0857               	movf	??_uart_init+4,w
  1190  03E8  00F6               	movwf	___aldiv@dividend+2
  1191  03E9  0856               	movf	??_uart_init+3,w
  1192  03EA  00F5               	movwf	___aldiv@dividend+1
  1193  03EB  0855               	movf	??_uart_init+2,w
  1194  03EC  00F4               	movwf	___aldiv@dividend
  1195  03ED  120A  118A  2509  120A  118A  	fcall	___aldiv
  1196  03F2  0870               	movf	?___aldiv,w
  1197  03F3  3EFF               	addlw	255
  1198  03F4  00F9               	movwf	uart_init@bRate
  1199  03F5  0871               	movf	?___aldiv+1,w
  1200  03F6  1803               	skipnc
  1201  03F7  3E01               	addlw	1
  1202  03F8  3EFF               	addlw	255
  1203  03F9  00FA               	movwf	uart_init@bRate+1
  1204  03FA                     l1303:
  1205                           
  1206                           ;uart_init.c: 17:     TXSTA=0b00100100;
  1207  03FA  3024               	movlw	36
  1208  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  1209  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  1210  03FD  0098               	movwf	24	;volatile
  1211  03FE                     l1305:
  1212                           
  1213                           ;uart_init.c: 18:     RCSTA=0b10010000;
  1214  03FE  3090               	movlw	144
  1215  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  1216  0400  1303               	bcf	3,6	;RP1=0, select bank0
  1217  0401  0098               	movwf	24	;volatile
  1218  0402                     l1307:
  1219                           
  1220                           ;uart_init.c: 19:     BAUDCTL=0b00001000;
  1221  0402  3008               	movlw	8
  1222  0403  1683               	bsf	3,5	;RP0=1, select bank3
  1223  0404  1703               	bsf	3,6	;RP1=1, select bank3
  1224  0405  0087               	movwf	7	;volatile
  1225  0406                     l1309:
  1226                           
  1227                           ;uart_init.c: 21:     SPBRGH=bRate.byte.HB;
  1228  0406  087A               	movf	uart_init@bRate+1,w
  1229  0407  1683               	bsf	3,5	;RP0=1, select bank1
  1230  0408  1303               	bcf	3,6	;RP1=0, select bank1
  1231  0409  009A               	movwf	26	;volatile
  1232  040A                     l1311:
  1233                           
  1234                           ;uart_init.c: 22:     SPBRG=bRate.byte.LB;
  1235  040A  0879               	movf	uart_init@bRate,w
  1236  040B  0099               	movwf	25	;volatile
  1237  040C                     l202:
  1238  040C  0008               	return
  1239  040D                     __end_of_uart_init:
  1240                           
  1241                           	psect	text2
  1242  0509                     __ptext2:	
  1243 ;; *************** function ___aldiv *****************
  1244 ;; Defined at:
  1245 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  divisor         4    0[COMMON] long 
  1248 ;;  dividend        4    4[COMMON] long 
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;  quotient        4    2[BANK0 ] long 
  1251 ;;  sign            1    1[BANK0 ] unsigned char 
  1252 ;;  counter         1    0[BANK0 ] unsigned char 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  4    0[COMMON] long 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1262 ;;      Params:         8       0       0       0       0
  1263 ;;      Locals:         0       6       0       0       0
  1264 ;;      Temps:          1       0       0       0       0
  1265 ;;      Totals:         9       6       0       0       0
  1266 ;;Total ram usage:       15 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_uart_init
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function ___aldiv
  1277  0509                     ___aldiv:
  1278  0509                     l1231:	
  1279                           ;incstack = 0
  1280                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1281                           
  1282  0509  1283               	bcf	3,5	;RP0=0, select bank0
  1283  050A  1303               	bcf	3,6	;RP1=0, select bank0
  1284  050B  01CC               	clrf	___aldiv@sign
  1285  050C                     l1233:
  1286  050C  1FF3               	btfss	___aldiv@divisor+3,7
  1287  050D  2D0F               	goto	u641
  1288  050E  2D10               	goto	u640
  1289  050F                     u641:
  1290  050F  2D1D               	goto	l366
  1291  0510                     u640:
  1292  0510                     l1235:
  1293  0510  09F0               	comf	___aldiv@divisor,f
  1294  0511  09F1               	comf	___aldiv@divisor+1,f
  1295  0512  09F2               	comf	___aldiv@divisor+2,f
  1296  0513  09F3               	comf	___aldiv@divisor+3,f
  1297  0514  0AF0               	incf	___aldiv@divisor,f
  1298  0515  1903               	skipnz
  1299  0516  0AF1               	incf	___aldiv@divisor+1,f
  1300  0517  1903               	skipnz
  1301  0518  0AF2               	incf	___aldiv@divisor+2,f
  1302  0519  1903               	skipnz
  1303  051A  0AF3               	incf	___aldiv@divisor+3,f
  1304  051B  01CC               	clrf	___aldiv@sign
  1305  051C  0ACC               	incf	___aldiv@sign,f
  1306  051D                     l366:
  1307  051D  1FF7               	btfss	___aldiv@dividend+3,7
  1308  051E  2D20               	goto	u651
  1309  051F  2D21               	goto	u650
  1310  0520                     u651:
  1311  0520  2D30               	goto	l1241
  1312  0521                     u650:
  1313  0521                     l1237:
  1314  0521  09F4               	comf	___aldiv@dividend,f
  1315  0522  09F5               	comf	___aldiv@dividend+1,f
  1316  0523  09F6               	comf	___aldiv@dividend+2,f
  1317  0524  09F7               	comf	___aldiv@dividend+3,f
  1318  0525  0AF4               	incf	___aldiv@dividend,f
  1319  0526  1903               	skipnz
  1320  0527  0AF5               	incf	___aldiv@dividend+1,f
  1321  0528  1903               	skipnz
  1322  0529  0AF6               	incf	___aldiv@dividend+2,f
  1323  052A  1903               	skipnz
  1324  052B  0AF7               	incf	___aldiv@dividend+3,f
  1325  052C                     l1239:
  1326  052C  3001               	movlw	1
  1327  052D  00F8               	movwf	??___aldiv
  1328  052E  0878               	movf	??___aldiv,w
  1329  052F  06CC               	xorwf	___aldiv@sign,f
  1330  0530                     l1241:
  1331  0530  3000               	movlw	0
  1332  0531  00D0               	movwf	___aldiv@quotient+3
  1333  0532  3000               	movlw	0
  1334  0533  00CF               	movwf	___aldiv@quotient+2
  1335  0534  3000               	movlw	0
  1336  0535  00CE               	movwf	___aldiv@quotient+1
  1337  0536  3000               	movlw	0
  1338  0537  00CD               	movwf	___aldiv@quotient
  1339  0538                     l1243:
  1340  0538  0873               	movf	___aldiv@divisor+3,w
  1341  0539  0472               	iorwf	___aldiv@divisor+2,w
  1342  053A  0471               	iorwf	___aldiv@divisor+1,w
  1343  053B  0470               	iorwf	___aldiv@divisor,w
  1344  053C  1903               	skipnz
  1345  053D  2D3F               	goto	u661
  1346  053E  2D40               	goto	u660
  1347  053F                     u661:
  1348  053F  2D8D               	goto	l1263
  1349  0540                     u660:
  1350  0540                     l1245:
  1351  0540  01CB               	clrf	___aldiv@counter
  1352  0541  0ACB               	incf	___aldiv@counter,f
  1353  0542  2D50               	goto	l1249
  1354  0543                     l1247:
  1355  0543  3001               	movlw	1
  1356  0544  00F8               	movwf	??___aldiv
  1357  0545                     u675:
  1358  0545  1003               	clrc
  1359  0546  0DF0               	rlf	___aldiv@divisor,f
  1360  0547  0DF1               	rlf	___aldiv@divisor+1,f
  1361  0548  0DF2               	rlf	___aldiv@divisor+2,f
  1362  0549  0DF3               	rlf	___aldiv@divisor+3,f
  1363  054A  0BF8               	decfsz	??___aldiv,f
  1364  054B  2D45               	goto	u675
  1365  054C  3001               	movlw	1
  1366  054D  00F8               	movwf	??___aldiv
  1367  054E  0878               	movf	??___aldiv,w
  1368  054F  07CB               	addwf	___aldiv@counter,f
  1369  0550                     l1249:
  1370  0550  1FF3               	btfss	___aldiv@divisor+3,7
  1371  0551  2D53               	goto	u681
  1372  0552  2D54               	goto	u680
  1373  0553                     u681:
  1374  0553  2D43               	goto	l1247
  1375  0554                     u680:
  1376  0554                     l1251:
  1377  0554  3001               	movlw	1
  1378  0555  00F8               	movwf	??___aldiv
  1379  0556                     u695:
  1380  0556  1003               	clrc
  1381  0557  0DCD               	rlf	___aldiv@quotient,f
  1382  0558  0DCE               	rlf	___aldiv@quotient+1,f
  1383  0559  0DCF               	rlf	___aldiv@quotient+2,f
  1384  055A  0DD0               	rlf	___aldiv@quotient+3,f
  1385  055B  0BF8               	decfsz	??___aldiv,f
  1386  055C  2D56               	goto	u695
  1387  055D                     l1253:
  1388  055D  0873               	movf	___aldiv@divisor+3,w
  1389  055E  0277               	subwf	___aldiv@dividend+3,w
  1390  055F  1D03               	skipz
  1391  0560  2D6B               	goto	u705
  1392  0561  0872               	movf	___aldiv@divisor+2,w
  1393  0562  0276               	subwf	___aldiv@dividend+2,w
  1394  0563  1D03               	skipz
  1395  0564  2D6B               	goto	u705
  1396  0565  0871               	movf	___aldiv@divisor+1,w
  1397  0566  0275               	subwf	___aldiv@dividend+1,w
  1398  0567  1D03               	skipz
  1399  0568  2D6B               	goto	u705
  1400  0569  0870               	movf	___aldiv@divisor,w
  1401  056A  0274               	subwf	___aldiv@dividend,w
  1402  056B                     u705:
  1403  056B  1C03               	skipc
  1404  056C  2D6E               	goto	u701
  1405  056D  2D6F               	goto	u700
  1406  056E                     u701:
  1407  056E  2D7E               	goto	l1259
  1408  056F                     u700:
  1409  056F                     l1255:
  1410  056F  0870               	movf	___aldiv@divisor,w
  1411  0570  02F4               	subwf	___aldiv@dividend,f
  1412  0571  0871               	movf	___aldiv@divisor+1,w
  1413  0572  1C03               	skipc
  1414  0573  0F71               	incfsz	___aldiv@divisor+1,w
  1415  0574  02F5               	subwf	___aldiv@dividend+1,f
  1416  0575  0872               	movf	___aldiv@divisor+2,w
  1417  0576  1C03               	skipc
  1418  0577  0F72               	incfsz	___aldiv@divisor+2,w
  1419  0578  02F6               	subwf	___aldiv@dividend+2,f
  1420  0579  0873               	movf	___aldiv@divisor+3,w
  1421  057A  1C03               	skipc
  1422  057B  0F73               	incfsz	___aldiv@divisor+3,w
  1423  057C  02F7               	subwf	___aldiv@dividend+3,f
  1424  057D                     l1257:
  1425  057D  144D               	bsf	___aldiv@quotient,0
  1426  057E                     l1259:
  1427  057E  3001               	movlw	1
  1428  057F                     u715:
  1429  057F  1003               	clrc
  1430  0580  0CF3               	rrf	___aldiv@divisor+3,f
  1431  0581  0CF2               	rrf	___aldiv@divisor+2,f
  1432  0582  0CF1               	rrf	___aldiv@divisor+1,f
  1433  0583  0CF0               	rrf	___aldiv@divisor,f
  1434  0584  3EFF               	addlw	-1
  1435  0585  1D03               	skipz
  1436  0586  2D7F               	goto	u715
  1437  0587                     l1261:
  1438  0587  3001               	movlw	1
  1439  0588  02CB               	subwf	___aldiv@counter,f
  1440  0589  1D03               	btfss	3,2
  1441  058A  2D8C               	goto	u721
  1442  058B  2D8D               	goto	u720
  1443  058C                     u721:
  1444  058C  2D54               	goto	l1251
  1445  058D                     u720:
  1446  058D                     l1263:
  1447  058D  084C               	movf	___aldiv@sign,w
  1448  058E  1903               	btfsc	3,2
  1449  058F  2D91               	goto	u731
  1450  0590  2D92               	goto	u730
  1451  0591                     u731:
  1452  0591  2D9D               	goto	l1267
  1453  0592                     u730:
  1454  0592                     l1265:
  1455  0592  09CD               	comf	___aldiv@quotient,f
  1456  0593  09CE               	comf	___aldiv@quotient+1,f
  1457  0594  09CF               	comf	___aldiv@quotient+2,f
  1458  0595  09D0               	comf	___aldiv@quotient+3,f
  1459  0596  0ACD               	incf	___aldiv@quotient,f
  1460  0597  1903               	skipnz
  1461  0598  0ACE               	incf	___aldiv@quotient+1,f
  1462  0599  1903               	skipnz
  1463  059A  0ACF               	incf	___aldiv@quotient+2,f
  1464  059B  1903               	skipnz
  1465  059C  0AD0               	incf	___aldiv@quotient+3,f
  1466  059D                     l1267:
  1467  059D  0850               	movf	___aldiv@quotient+3,w
  1468  059E  00F3               	movwf	?___aldiv+3
  1469  059F  084F               	movf	___aldiv@quotient+2,w
  1470  05A0  00F2               	movwf	?___aldiv+2
  1471  05A1  084E               	movf	___aldiv@quotient+1,w
  1472  05A2  00F1               	movwf	?___aldiv+1
  1473  05A3  084D               	movf	___aldiv@quotient,w
  1474  05A4  00F0               	movwf	?___aldiv
  1475  05A5                     l376:
  1476  05A5  0008               	return
  1477  05A6                     __end_of___aldiv:
  1478                           
  1479                           	psect	text3
  1480  034A                     __ptext3:	
  1481 ;; *************** function _pic_init *****************
  1482 ;; Defined at:
  1483 ;;		line 9 in file "init.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1497 ;;      Params:         0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0
  1500 ;;      Totals:         0       0       0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           
  1511                           ;psect for function _pic_init
  1512  034A                     _pic_init:
  1513  034A                     l1271:	
  1514                           ;incstack = 0
  1515                           ; Regs used in _pic_init: [wreg+status,2]
  1516                           
  1517                           
  1518                           ;init.c: 13:     TRISCbits.TRISC5=0;
  1519  034A  1683               	bsf	3,5	;RP0=1, select bank1
  1520  034B  1303               	bcf	3,6	;RP1=0, select bank1
  1521  034C  1287               	bcf	7,5	;volatile
  1522                           
  1523                           ;init.c: 14:     PORTCbits.RC5=0;
  1524  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1525  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1526  034F  1287               	bcf	7,5	;volatile
  1527                           
  1528                           ;init.c: 17:     TRISAbits.TRISA0=1;
  1529  0350  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0351  1303               	bcf	3,6	;RP1=0, select bank1
  1531  0352  1405               	bsf	5,0	;volatile
  1532                           
  1533                           ;init.c: 18:     TRISAbits.TRISA1=1;
  1534  0353  1485               	bsf	5,1	;volatile
  1535                           
  1536                           ;init.c: 19:     TRISAbits.TRISA2=1;
  1537  0354  1505               	bsf	5,2	;volatile
  1538                           
  1539                           ;init.c: 20:     TRISAbits.TRISA3=1;
  1540  0355  1585               	bsf	5,3	;volatile
  1541  0356                     l1273:
  1542                           
  1543                           ;init.c: 24:     ANSEL = 0b00001111;
  1544  0356  300F               	movlw	15
  1545  0357  1683               	bsf	3,5	;RP0=1, select bank3
  1546  0358  1703               	bsf	3,6	;RP1=1, select bank3
  1547  0359  0088               	movwf	8	;volatile
  1548  035A                     l1275:
  1549                           
  1550                           ;init.c: 25:     ANSELH=0;
  1551  035A  0189               	clrf	9	;volatile
  1552  035B                     l1277:
  1553                           
  1554                           ;init.c: 26:     TRISB=0b00000000;
  1555  035B  1683               	bsf	3,5	;RP0=1, select bank1
  1556  035C  1303               	bcf	3,6	;RP1=0, select bank1
  1557  035D  0186               	clrf	6	;volatile
  1558  035E                     l1279:
  1559                           
  1560                           ;init.c: 27:     PORTB=0;
  1561  035E  1283               	bcf	3,5	;RP0=0, select bank0
  1562  035F  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0360  0186               	clrf	6	;volatile
  1564  0361                     l1281:
  1565                           
  1566                           ;init.c: 30:     ADCON0=0b11000001;
  1567  0361  30C1               	movlw	193
  1568  0362  009F               	movwf	31	;volatile
  1569  0363                     l1283:
  1570                           
  1571                           ;init.c: 31:     ADCON0bits.CHS0=0;
  1572  0363  111F               	bcf	31,2	;volatile
  1573  0364                     l1285:
  1574                           
  1575                           ;init.c: 32:     ADCON1=0b10000000;
  1576  0364  3080               	movlw	128
  1577  0365  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0366  1303               	bcf	3,6	;RP1=0, select bank1
  1579  0367  009F               	movwf	31	;volatile
  1580  0368                     l1287:
  1581                           
  1582                           ;init.c: 36:     OPTION_REG=0b10000111;
  1583  0368  3087               	movlw	135
  1584  0369  0081               	movwf	1	;volatile
  1585  036A                     l25:
  1586  036A  0008               	return
  1587  036B                     __end_of_pic_init:
  1588                           
  1589                           	psect	text4
  1590  0315                     __ptext4:	
  1591 ;; *************** function _eeprom_read *****************
  1592 ;; Defined at:
  1593 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c"
  1594 ;; Parameters:    Size  Location     Type
  1595 ;;  addr            1    wreg     unsigned char 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;  addr            1    1[COMMON] unsigned char 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      unsigned char 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         0       0       0       0       0
  1608 ;;      Locals:         1       0       0       0       0
  1609 ;;      Temps:          1       0       0       0       0
  1610 ;;      Totals:         2       0       0       0       0
  1611 ;;Total ram usage:        2 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _eeprom_read
  1622  0315                     _eeprom_read:
  1623                           
  1624                           ;incstack = 0
  1625                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  1626                           ;eeprom_read@addr stored from wreg
  1627  0315  00F1               	movwf	eeprom_read@addr
  1628  0316                     l295:	
  1629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c: 8:  do
  1630                           
  1631  0316  0064               	clrwdt	;# 
  1632  0317  1683               	bsf	3,5	;RP0=1, select bank3
  1633  0318  1703               	bsf	3,6	;RP1=1, select bank3
  1634  0319  188C               	btfsc	12,1	;volsfr
  1635  031A  2B1C               	goto	u761
  1636  031B  2B1D               	goto	u760
  1637  031C                     u761:
  1638  031C  2B16               	goto	l295
  1639  031D                     u760:
  1640  031D                     l1313:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  1643  031D  0871               	movf	eeprom_read@addr,w
  1644  031E  1283               	bcf	3,5	;RP0=0, select bank2
  1645  031F  1703               	bsf	3,6	;RP1=1, select bank2
  1646  0320  008D               	movwf	13	;volatile
  1647  0321  303F               	movlw	63
  1648  0322  00F0               	movwf	??_eeprom_read
  1649  0323  0870               	movf	??_eeprom_read,w
  1650  0324  1683               	bsf	3,5	;RP0=1, select bank3
  1651  0325  1703               	bsf	3,6	;RP1=1, select bank3
  1652  0326  058C               	andwf	12,f	;volsfr
  1653  0327  140C               	bsf	12,0	;volsfr
  1654  0328  1283               	bcf	3,5	;RP0=0, select bank2
  1655  0329  1703               	bsf	3,6	;RP1=1, select bank2
  1656  032A  080C               	movf	12,w	;volatile
  1657  032B                     l297:
  1658  032B  0008               	return
  1659  032C                     __end_of_eeprom_read:
  1660                           
  1661                           	psect	text5
  1662  0707                     __ptext5:	
  1663 ;; *************** function _MODBUS_SLAVE *****************
  1664 ;; Defined at:
  1665 ;;		line 12 in file "modbus.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  MODBUS          1    wreg     PTR struct .
  1668 ;;		 -> MODBUS(57), 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  MODBUS          1   16[BANK0 ] PTR struct .
  1671 ;;		 -> MODBUS(57), 
  1672 ;;  tmp             2   14[BANK0 ] unsigned int 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1682 ;;      Params:         0       0       0       0       0
  1683 ;;      Locals:         0       3       0       0       0
  1684 ;;      Temps:          0       5       0       0       0
  1685 ;;      Totals:         0       8       0       0       0
  1686 ;;Total ram usage:        8 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    2
  1689 ;; This function calls:
  1690 ;;		_CRC16
  1691 ;;		_TX_03
  1692 ;;		_TX_16
  1693 ;;		_TX_ERROR
  1694 ;;		_TX_FRAME
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           
  1701                           ;psect for function _MODBUS_SLAVE
  1702  0707                     _MODBUS_SLAVE:
  1703                           
  1704                           ;incstack = 0
  1705                           ; Regs used in _MODBUS_SLAVE: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1706                           ;MODBUS_SLAVE@MODBUS stored from wreg
  1707  0707  1283               	bcf	3,5	;RP0=0, select bank0
  1708  0708  1303               	bcf	3,6	;RP1=0, select bank0
  1709  0709  00DB               	movwf	MODBUS_SLAVE@MODBUS
  1710  070A                     l1317:
  1711                           
  1712                           ;modbus.c: 13:     unsigned int tmp;;modbus.c: 17:     if(((MODBUS->buffer[0]==addr)|(MO
      +                          DBUS->buffer[0]==255)) & (MODBUS->rxcnt>5)){
  1713  070A  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1714  070B  0084               	movwf	4
  1715  070C  1383               	bcf	3,7	;select IRP bank0
  1716  070D  0800               	movf	0,w
  1717  070E  0668               	xorwf	_addr,w
  1718  070F  1903               	skipnz
  1719  0710  2F12               	goto	u771
  1720  0711  2F13               	goto	u770
  1721  0712                     u771:
  1722  0712  2F1A               	goto	l1321
  1723  0713                     u770:
  1724  0713                     l1319:
  1725  0713  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1726  0714  0084               	movwf	4
  1727  0715  0A00               	incf	0,w
  1728  0716  1D03               	btfss	3,2
  1729  0717  2F19               	goto	u781
  1730  0718  2F1A               	goto	u780
  1731  0719                     u781:
  1732  0719  2FD5               	goto	l1349
  1733  071A                     u780:
  1734  071A                     l1321:
  1735  071A  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1736  071B  3E33               	addlw	51
  1737  071C  0084               	movwf	4
  1738  071D  3006               	movlw	6
  1739  071E  0200               	subwf	0,w
  1740  071F  1C03               	skipc
  1741  0720  2F22               	goto	u791
  1742  0721  2F23               	goto	u790
  1743  0722                     u791:
  1744  0722  2FD5               	goto	l1349
  1745  0723                     u790:
  1746  0723                     l1323:
  1747                           
  1748                           ;modbus.c: 18:         tmp=CRC16(MODBUS->buffer,MODBUS->rxcnt-2);
  1749  0723  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1750  0724  3E33               	addlw	51
  1751  0725  0084               	movwf	4
  1752  0726  0800               	movf	0,w
  1753  0727  3EFE               	addlw	254
  1754  0728  00F0               	movwf	CRC16@byte_cnt
  1755  0729  30FF               	movlw	255
  1756  072A  1803               	skipnc
  1757  072B  3000               	movlw	0
  1758  072C  00F1               	movwf	CRC16@byte_cnt+1
  1759  072D  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1760  072E  120A  118A  240D  120A  118A  	fcall	_CRC16
  1761  0733  0871               	movf	?_CRC16+1,w
  1762  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1763  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1764  0736  00DA               	movwf	MODBUS_SLAVE@tmp+1
  1765  0737  0870               	movf	?_CRC16,w
  1766  0738  00D9               	movwf	MODBUS_SLAVE@tmp
  1767  0739                     l1325:
  1768                           
  1769                           ;modbus.c: 21:     if((MODBUS->buffer[MODBUS->rxcnt-2]==(tmp&0x00FF)) & (MODBUS->buffer[
      +                          MODBUS->rxcnt-1]==(tmp>>8))) {
  1770  0739  30FF               	movlw	255
  1771  073A  0559               	andwf	MODBUS_SLAVE@tmp,w
  1772  073B  00D4               	movwf	??_MODBUS_SLAVE
  1773  073C  3000               	movlw	0
  1774  073D  055A               	andwf	MODBUS_SLAVE@tmp+1,w
  1775  073E  00D5               	movwf	??_MODBUS_SLAVE+1
  1776  073F  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1777  0740  3E33               	addlw	51
  1778  0741  0084               	movwf	4
  1779  0742  1383               	bcf	3,7	;select IRP bank0
  1780  0743  0800               	movf	0,w
  1781  0744  075B               	addwf	MODBUS_SLAVE@MODBUS,w
  1782  0745  00D6               	movwf	??_MODBUS_SLAVE+2
  1783  0746  0856               	movf	??_MODBUS_SLAVE+2,w
  1784  0747  3EFE               	addlw	254
  1785  0748  0084               	movwf	4
  1786  0749  0800               	movf	0,w
  1787  074A  00D7               	movwf	??_MODBUS_SLAVE+3
  1788  074B  01D8               	clrf	??_MODBUS_SLAVE+4
  1789  074C  0855               	movf	??_MODBUS_SLAVE+1,w
  1790  074D  0658               	xorwf	??_MODBUS_SLAVE+4,w
  1791  074E  1D03               	skipz
  1792  074F  2F52               	goto	u805
  1793  0750  0854               	movf	??_MODBUS_SLAVE,w
  1794  0751  0657               	xorwf	??_MODBUS_SLAVE+3,w
  1795  0752                     u805:
  1796  0752  1D03               	skipz
  1797  0753  2F55               	goto	u801
  1798  0754  2F56               	goto	u800
  1799  0755                     u801:
  1800  0755  2FD5               	goto	l1349
  1801  0756                     u800:
  1802  0756                     l1327:
  1803  0756  085A               	movf	MODBUS_SLAVE@tmp+1,w
  1804  0757  00D5               	movwf	??_MODBUS_SLAVE+1
  1805  0758  0859               	movf	MODBUS_SLAVE@tmp,w
  1806  0759  00D4               	movwf	??_MODBUS_SLAVE
  1807  075A  0855               	movf	??_MODBUS_SLAVE+1,w
  1808  075B  00D4               	movwf	??_MODBUS_SLAVE
  1809  075C  01D5               	clrf	??_MODBUS_SLAVE+1
  1810  075D  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1811  075E  3E33               	addlw	51
  1812  075F  0084               	movwf	4
  1813  0760  0800               	movf	0,w
  1814  0761  075B               	addwf	MODBUS_SLAVE@MODBUS,w
  1815  0762  00D6               	movwf	??_MODBUS_SLAVE+2
  1816  0763  0856               	movf	??_MODBUS_SLAVE+2,w
  1817  0764  3EFF               	addlw	255
  1818  0765  0084               	movwf	4
  1819  0766  0800               	movf	0,w
  1820  0767  00D7               	movwf	??_MODBUS_SLAVE+3
  1821  0768  01D8               	clrf	??_MODBUS_SLAVE+4
  1822  0769  0855               	movf	??_MODBUS_SLAVE+1,w
  1823  076A  0658               	xorwf	??_MODBUS_SLAVE+4,w
  1824  076B  1D03               	skipz
  1825  076C  2F6F               	goto	u815
  1826  076D  0854               	movf	??_MODBUS_SLAVE,w
  1827  076E  0657               	xorwf	??_MODBUS_SLAVE+3,w
  1828  076F                     u815:
  1829  076F  1D03               	skipz
  1830  0770  2F72               	goto	u811
  1831  0771  2F73               	goto	u810
  1832  0772                     u811:
  1833  0772  2FD5               	goto	l1349
  1834  0773                     u810:
  1835  0773  2F8B               	goto	l1339
  1836  0774                     l1331:
  1837                           
  1838                           ;modbus.c: 24:                 TX_03(MODBUS);
  1839  0774  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1840  0775  120A  118A  264D  120A  118A  	fcall	_TX_03
  1841                           
  1842                           ;modbus.c: 25:                 break;
  1843  077A  2F9D               	goto	l1341
  1844  077B                     l1333:
  1845                           
  1846                           ;modbus.c: 27:                 TX_16(MODBUS);
  1847  077B  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1848  077C  120A  118A  247F  120A  118A  	fcall	_TX_16
  1849                           
  1850                           ;modbus.c: 28:                 break;
  1851  0781  2F9D               	goto	l1341
  1852  0782                     l1335:
  1853                           
  1854                           ;modbus.c: 30:                 TX_ERROR(MODBUS,0x01);
  1855  0782  01F0               	clrf	TX_ERROR@error_type
  1856  0783  0AF0               	incf	TX_ERROR@error_type,f
  1857  0784  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1858  0785  120A  118A  2301  120A  118A  	fcall	_TX_ERROR
  1859                           
  1860                           ;modbus.c: 31:                 break;
  1861  078A  2F9D               	goto	l1341
  1862  078B                     l1339:
  1863  078B  0A5B               	incf	MODBUS_SLAVE@MODBUS,w
  1864  078C  0084               	movwf	4
  1865  078D  0800               	movf	0,w
  1866  078E  00D4               	movwf	??_MODBUS_SLAVE
  1867  078F  01D5               	clrf	??_MODBUS_SLAVE+1
  1868                           
  1869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1870                           ; Switch size 1, requested type "simple"
  1871                           ; Number of cases is 1, Range of values is 0 to 0
  1872                           ; switch strategies available:
  1873                           ; Name         Instructions Cycles
  1874                           ; simple_byte            4     3 (average)
  1875                           ; direct_byte           11     8 (fixed)
  1876                           ; jumptable            260     6 (fixed)
  1877                           ;	Chosen strategy is simple_byte
  1878  0790  0855               	movf	??_MODBUS_SLAVE+1,w
  1879  0791  3A00               	xorlw	0	; case 0
  1880  0792  1903               	skipnz
  1881  0793  2F95               	goto	l1463
  1882  0794  2F82               	goto	l1335
  1883  0795                     l1463:
  1884                           
  1885                           ; Switch size 1, requested type "simple"
  1886                           ; Number of cases is 2, Range of values is 3 to 16
  1887                           ; switch strategies available:
  1888                           ; Name         Instructions Cycles
  1889                           ; simple_byte            7     4 (average)
  1890                           ; direct_byte           53    11 (fixed)
  1891                           ; jumptable            263     9 (fixed)
  1892                           ;	Chosen strategy is simple_byte
  1893  0795  0854               	movf	??_MODBUS_SLAVE,w
  1894  0796  3A03               	xorlw	3	; case 3
  1895  0797  1903               	skipnz
  1896  0798  2F74               	goto	l1331
  1897  0799  3A13               	xorlw	19	; case 16
  1898  079A  1903               	skipnz
  1899  079B  2F7B               	goto	l1333
  1900  079C  2F82               	goto	l1335
  1901  079D                     l1341:
  1902                           
  1903                           ;modbus.c: 35:          tmp=CRC16(MODBUS->buffer,MODBUS->txlen-2);
  1904  079D  1283               	bcf	3,5	;RP0=0, select bank0
  1905  079E  1303               	bcf	3,6	;RP1=0, select bank0
  1906  079F  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1907  07A0  3E35               	addlw	53
  1908  07A1  0084               	movwf	4
  1909  07A2  1383               	bcf	3,7	;select IRP bank0
  1910  07A3  0800               	movf	0,w
  1911  07A4  3EFE               	addlw	254
  1912  07A5  00F0               	movwf	CRC16@byte_cnt
  1913  07A6  30FF               	movlw	255
  1914  07A7  1803               	skipnc
  1915  07A8  3000               	movlw	0
  1916  07A9  00F1               	movwf	CRC16@byte_cnt+1
  1917  07AA  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1918  07AB  120A  118A  240D  120A  118A  	fcall	_CRC16
  1919  07B0  0871               	movf	?_CRC16+1,w
  1920  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1921  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1922  07B3  00DA               	movwf	MODBUS_SLAVE@tmp+1
  1923  07B4  0870               	movf	?_CRC16,w
  1924  07B5  00D9               	movwf	MODBUS_SLAVE@tmp
  1925  07B6                     l1343:
  1926                           
  1927                           ;modbus.c: 36:          MODBUS->buffer[MODBUS->txlen-2]=tmp;
  1928  07B6  0859               	movf	MODBUS_SLAVE@tmp,w
  1929  07B7  00D4               	movwf	??_MODBUS_SLAVE
  1930  07B8  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1931  07B9  3E35               	addlw	53
  1932  07BA  0084               	movwf	4
  1933  07BB  1383               	bcf	3,7	;select IRP bank0
  1934  07BC  0800               	movf	0,w
  1935  07BD  075B               	addwf	MODBUS_SLAVE@MODBUS,w
  1936  07BE  00D5               	movwf	??_MODBUS_SLAVE+1
  1937  07BF  0855               	movf	??_MODBUS_SLAVE+1,w
  1938  07C0  3EFE               	addlw	254
  1939  07C1  0084               	movwf	4
  1940  07C2  0854               	movf	??_MODBUS_SLAVE,w
  1941  07C3  0080               	movwf	0
  1942  07C4                     l1345:
  1943                           
  1944                           ;modbus.c: 37:          MODBUS->buffer[MODBUS->txlen-1]=tmp>>8;
  1945  07C4  085A               	movf	MODBUS_SLAVE@tmp+1,w
  1946  07C5  00D4               	movwf	??_MODBUS_SLAVE
  1947  07C6  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1948  07C7  3E35               	addlw	53
  1949  07C8  0084               	movwf	4
  1950  07C9  0800               	movf	0,w
  1951  07CA  075B               	addwf	MODBUS_SLAVE@MODBUS,w
  1952  07CB  00D5               	movwf	??_MODBUS_SLAVE+1
  1953  07CC  0855               	movf	??_MODBUS_SLAVE+1,w
  1954  07CD  3EFF               	addlw	255
  1955  07CE  0084               	movwf	4
  1956  07CF  0854               	movf	??_MODBUS_SLAVE,w
  1957  07D0  0080               	movwf	0
  1958  07D1                     l1347:
  1959                           
  1960                           ;modbus.c: 38:          MODBUS->txcnt=0;
  1961  07D1  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1962  07D2  3E34               	addlw	52
  1963  07D3  0084               	movwf	4
  1964  07D4  0180               	clrf	0
  1965  07D5                     l1349:
  1966                           
  1967                           ;modbus.c: 44:         TX_FRAME(MODBUS);
  1968  07D5  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1969  07D6  120A  118A  236B  120A  118A  	fcall	_TX_FRAME
  1970  07DB                     l1351:
  1971                           
  1972                           ;modbus.c: 45:  MODBUS->rxgap=0;
  1973  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  1974  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  1975  07DD  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1976  07DE  3E36               	addlw	54
  1977  07DF  0084               	movwf	4
  1978  07E0  1383               	bcf	3,7	;select IRP bank0
  1979  07E1  0180               	clrf	0
  1980  07E2                     l1353:
  1981                           
  1982                           ;modbus.c: 46:  MODBUS->rxcnt=0;
  1983  07E2  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1984  07E3  3E33               	addlw	51
  1985  07E4  0084               	movwf	4
  1986  07E5  0180               	clrf	0
  1987  07E6                     l1355:
  1988                           
  1989                           ;modbus.c: 47:  MODBUS->rxtimer=0x00;
  1990  07E6  085B               	movf	MODBUS_SLAVE@MODBUS,w
  1991  07E7  3E32               	addlw	50
  1992  07E8  0084               	movwf	4
  1993  07E9  0180               	clrf	0
  1994  07EA                     l147:
  1995  07EA  0008               	return
  1996  07EB                     __end_of_MODBUS_SLAVE:
  1997                           
  1998                           	psect	text6
  1999  036B                     __ptext6:	
  2000 ;; *************** function _TX_FRAME *****************
  2001 ;; Defined at:
  2002 ;;		line 116 in file "modbus.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  MODBUS          1    wreg     PTR struct .
  2005 ;;		 -> MODBUS(57), 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  MODBUS          1    2[COMMON] PTR struct .
  2008 ;;		 -> MODBUS(57), 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       0       0       0       0
  2019 ;;      Locals:         1       0       0       0       0
  2020 ;;      Temps:          2       0       0       0       0
  2021 ;;      Totals:         3       0       0       0       0
  2022 ;;Total ram usage:        3 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_MODBUS_SLAVE
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           
  2032                           ;psect for function _TX_FRAME
  2033  036B                     _TX_FRAME:
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in _TX_FRAME: [wreg-fsr0h+status,2+status,0]
  2037                           ;TX_FRAME@MODBUS stored from wreg
  2038  036B  00F2               	movwf	TX_FRAME@MODBUS
  2039  036C                     l1221:
  2040                           
  2041                           ;modbus.c: 116: void TX_FRAME(UART_DATA *MODBUS);modbus.c: 117: {;modbus.c: 118:       R
      +                          CSTAbits.CREN=0;
  2042  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2043  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2044  036E  1218               	bcf	24,4	;volatile
  2045                           
  2046                           ;modbus.c: 119:       TXSTAbits.TXEN=1;
  2047  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0371  1698               	bsf	24,5	;volatile
  2050                           
  2051                           ;modbus.c: 120:       INTCONbits.GIE=0;
  2052  0372  138B               	bcf	11,7	;volatile
  2053                           
  2054                           ;modbus.c: 121:       while(MODBUS->txcnt<MODBUS->txlen){
  2055  0373  2B8E               	goto	l1225
  2056  0374                     l1223:
  2057                           
  2058                           ;modbus.c: 122:          TXREG=MODBUS->buffer[MODBUS->txcnt++];
  2059  0374  0872               	movf	TX_FRAME@MODBUS,w
  2060  0375  3E34               	addlw	52
  2061  0376  0084               	movwf	4
  2062  0377  0800               	movf	0,w
  2063  0378  0772               	addwf	TX_FRAME@MODBUS,w
  2064  0379  00F0               	movwf	??_TX_FRAME
  2065  037A  0870               	movf	??_TX_FRAME,w
  2066  037B  0084               	movwf	4
  2067  037C  0800               	movf	0,w
  2068  037D  1283               	bcf	3,5	;RP0=0, select bank0
  2069  037E  0099               	movwf	25	;volatile
  2070  037F  3001               	movlw	1
  2071  0380  00F0               	movwf	??_TX_FRAME
  2072  0381  0872               	movf	TX_FRAME@MODBUS,w
  2073  0382  3E34               	addlw	52
  2074  0383  0084               	movwf	4
  2075  0384  0870               	movf	??_TX_FRAME,w
  2076  0385  0780               	addwf	0,f
  2077                           
  2078                           ;modbus.c: 123:          while(!PIR1bits.TXIF) __nop();
  2079  0386  2B88               	goto	l168
  2080  0387                     l169:
  2081  0387  0000               	nop
  2082  0388                     l168:
  2083  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2085  038A  1E0C               	btfss	12,4	;volatile
  2086  038B  2B8D               	goto	u621
  2087  038C  2B8E               	goto	u620
  2088  038D                     u621:
  2089  038D  2B87               	goto	l169
  2090  038E                     u620:
  2091  038E                     l1225:
  2092                           
  2093                           ;modbus.c: 121:       while(MODBUS->txcnt<MODBUS->txlen){
  2094  038E  0872               	movf	TX_FRAME@MODBUS,w
  2095  038F  3E35               	addlw	53
  2096  0390  0084               	movwf	4
  2097  0391  1383               	bcf	3,7	;select IRP bank0
  2098  0392  0800               	movf	0,w
  2099  0393  00F0               	movwf	??_TX_FRAME
  2100  0394  0872               	movf	TX_FRAME@MODBUS,w
  2101  0395  3E34               	addlw	52
  2102  0396  0084               	movwf	4
  2103  0397  0800               	movf	0,w
  2104  0398  00F1               	movwf	??_TX_FRAME+1
  2105  0399  0870               	movf	??_TX_FRAME,w
  2106  039A  0271               	subwf	??_TX_FRAME+1,w
  2107  039B  1C03               	skipc
  2108  039C  2B9E               	goto	u631
  2109  039D  2B9F               	goto	u630
  2110  039E                     u631:
  2111  039E  2B74               	goto	l1223
  2112  039F                     u630:
  2113  039F                     l171:
  2114                           
  2115                           ;modbus.c: 125:       INTCONbits.GIE=1;
  2116  039F  178B               	bsf	11,7	;volatile
  2117  03A0                     l1227:
  2118                           
  2119                           ;modbus.c: 126:       MODBUS->txlen=0;
  2120  03A0  0872               	movf	TX_FRAME@MODBUS,w
  2121  03A1  3E35               	addlw	53
  2122  03A2  0084               	movwf	4
  2123  03A3  0180               	clrf	0
  2124  03A4                     l1229:
  2125                           
  2126                           ;modbus.c: 127:       RCSTAbits.CREN=1;
  2127  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  2128  03A5  1618               	bsf	24,4	;volatile
  2129  03A6                     l172:
  2130  03A6  0008               	return
  2131  03A7                     __end_of_TX_FRAME:
  2132                           
  2133                           	psect	text7
  2134  047F                     __ptext7:	
  2135 ;; *************** function _TX_16 *****************
  2136 ;; Defined at:
  2137 ;;		line 89 in file "modbus.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  MODBUS          1    wreg     PTR struct .
  2140 ;;		 -> MODBUS(57), 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  MODBUS          1    6[BANK0 ] PTR struct .
  2143 ;;		 -> MODBUS(57), 
  2144 ;;  i               2    0[BANK0 ] unsigned int 
  2145 ;;  tmp             2    4[BANK0 ] unsigned int 
  2146 ;;  j               1    3[BANK0 ] unsigned char 
  2147 ;;  count           1    2[BANK0 ] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  1    wreg      void 
  2150 ;; Registers used:
  2151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2157 ;;      Params:         0       0       0       0       0
  2158 ;;      Locals:         0       7       0       0       0
  2159 ;;      Temps:          5       0       0       0       0
  2160 ;;      Totals:         5       7       0       0       0
  2161 ;;Total ram usage:       12 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    1
  2164 ;; This function calls:
  2165 ;;		_TX_ERROR
  2166 ;; This function is called by:
  2167 ;;		_MODBUS_SLAVE
  2168 ;; This function uses a non-reentrant model
  2169 ;;
  2170                           
  2171                           
  2172                           ;psect for function _TX_16
  2173  047F                     _TX_16:
  2174                           
  2175                           ;incstack = 0
  2176                           ; Regs used in _TX_16: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2177                           ;TX_16@MODBUS stored from wreg
  2178  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0481  00D1               	movwf	TX_16@MODBUS
  2181  0482                     l1201:
  2182                           
  2183                           ;modbus.c: 89: void TX_16(UART_DATA *MODBUS);modbus.c: 90: {;modbus.c: 91:     unsigned 
      +                          int tmp;;modbus.c: 92:     unsigned char count,j;;modbus.c: 94:    tmp=((MODBUS->buffer[
      +                          2]<<8)+MODBUS->buffer[3]);
  2184  0482  0851               	movf	TX_16@MODBUS,w
  2185  0483  3E02               	addlw	2
  2186  0484  0084               	movwf	4
  2187  0485  1383               	bcf	3,7	;select IRP bank0
  2188  0486  0800               	movf	0,w
  2189  0487  00F3               	movwf	??_TX_16
  2190  0488  01F4               	clrf	??_TX_16+1
  2191  0489  0873               	movf	??_TX_16,w
  2192  048A  00F4               	movwf	??_TX_16+1
  2193  048B  01F3               	clrf	??_TX_16
  2194  048C  0851               	movf	TX_16@MODBUS,w
  2195  048D  3E03               	addlw	3
  2196  048E  0084               	movwf	4
  2197  048F  0800               	movf	0,w
  2198  0490  0773               	addwf	??_TX_16,w
  2199  0491  00CF               	movwf	TX_16@tmp
  2200  0492  3000               	movlw	0
  2201  0493  1803               	skipnc
  2202  0494  3001               	movlw	1
  2203  0495  0774               	addwf	??_TX_16+1,w
  2204  0496  00D0               	movwf	TX_16@tmp+1
  2205  0497                     l1203:
  2206                           
  2207                           ;modbus.c: 95:    count=MODBUS->buffer[6];
  2208  0497  0851               	movf	TX_16@MODBUS,w
  2209  0498  3E06               	addlw	6
  2210  0499  0084               	movwf	4
  2211  049A  0800               	movf	0,w
  2212  049B  00F3               	movwf	??_TX_16
  2213  049C  0873               	movf	??_TX_16,w
  2214  049D  00CD               	movwf	TX_16@count
  2215  049E                     l1205:
  2216                           
  2217                           ;modbus.c: 98:    if((tmp+count)<20) {
  2218  049E  084D               	movf	TX_16@count,w
  2219  049F  074F               	addwf	TX_16@tmp,w
  2220  04A0  00F3               	movwf	??_TX_16
  2221  04A1  0850               	movf	TX_16@tmp+1,w
  2222  04A2  1803               	skipnc
  2223  04A3  0A50               	incf	TX_16@tmp+1,w
  2224  04A4  00F4               	movwf	??_TX_16+1
  2225  04A5  3000               	movlw	0
  2226  04A6  0274               	subwf	??_TX_16+1,w
  2227  04A7  3014               	movlw	20
  2228  04A8  1903               	skipnz
  2229  04A9  0273               	subwf	??_TX_16,w
  2230  04AA  1803               	skipnc
  2231  04AB  2CAD               	goto	u581
  2232  04AC  2CAE               	goto	u580
  2233  04AD                     u581:
  2234  04AD  2CFE               	goto	l1219
  2235  04AE                     u580:
  2236  04AE                     l1207:
  2237                           
  2238                           ;modbus.c: 99:        j=7;
  2239  04AE  3007               	movlw	7
  2240  04AF  00F3               	movwf	??_TX_16
  2241  04B0  0873               	movf	??_TX_16,w
  2242  04B1  00CE               	movwf	TX_16@j
  2243                           
  2244                           ;modbus.c: 100:        for (unsigned int i=tmp; i<tmp+(count>1);i++){
  2245  04B2  0850               	movf	TX_16@tmp+1,w
  2246  04B3  00CC               	movwf	TX_16@i+1
  2247  04B4  084F               	movf	TX_16@tmp,w
  2248  04B5  00CB               	movwf	TX_16@i
  2249  04B6  2CD9               	goto	l1215
  2250  04B7                     l1209:
  2251                           
  2252                           ;modbus.c: 101:             res_table[i].Val=(MODBUS->buffer[j]<<8)+MODBUS->buffer[j+1];
  2253  04B7  084E               	movf	TX_16@j,w
  2254  04B8  0751               	addwf	TX_16@MODBUS,w
  2255  04B9  00F3               	movwf	??_TX_16
  2256  04BA  0A73               	incf	??_TX_16,w
  2257  04BB  0084               	movwf	4
  2258  04BC  0800               	movf	0,w
  2259  04BD  00F4               	movwf	??_TX_16+1
  2260  04BE  084E               	movf	TX_16@j,w
  2261  04BF  0751               	addwf	TX_16@MODBUS,w
  2262  04C0  00F5               	movwf	??_TX_16+2
  2263  04C1  0875               	movf	??_TX_16+2,w
  2264  04C2  0084               	movwf	4
  2265  04C3  0800               	movf	0,w
  2266  04C4  00F6               	movwf	??_TX_16+3
  2267  04C5  084B               	movf	TX_16@i,w
  2268  04C6  00F7               	movwf	??_TX_16+4
  2269  04C7  0777               	addwf	??_TX_16+4,w
  2270  04C8  3E20               	addlw	(low (_res_table| 0))& (0+255)
  2271  04C9  0084               	movwf	4
  2272  04CA  0874               	movf	??_TX_16+1,w
  2273  04CB  0080               	movwf	0
  2274  04CC  0A84               	incf	4,f
  2275  04CD  0876               	movf	??_TX_16+3,w
  2276  04CE  0080               	movwf	0
  2277  04CF                     l1211:
  2278                           
  2279                           ;modbus.c: 102:             j+=2;
  2280  04CF  3002               	movlw	2
  2281  04D0  00F3               	movwf	??_TX_16
  2282  04D1  0873               	movf	??_TX_16,w
  2283  04D2  07CE               	addwf	TX_16@j,f
  2284  04D3                     l1213:
  2285                           
  2286                           ;modbus.c: 103:         }
  2287  04D3  3001               	movlw	1
  2288  04D4  07CB               	addwf	TX_16@i,f
  2289  04D5  1803               	skipnc
  2290  04D6  0ACC               	incf	TX_16@i+1,f
  2291  04D7  3000               	movlw	0
  2292  04D8  07CC               	addwf	TX_16@i+1,f
  2293  04D9                     l1215:
  2294  04D9  3002               	movlw	2
  2295  04DA  024D               	subwf	TX_16@count,w
  2296  04DB  1803               	skipnc
  2297  04DC  2CDE               	goto	u591
  2298  04DD  2CE0               	goto	u590
  2299  04DE                     u591:
  2300  04DE  3001               	movlw	1
  2301  04DF  2CE1               	goto	u600
  2302  04E0                     u590:
  2303  04E0  3000               	movlw	0
  2304  04E1                     u600:
  2305  04E1  074F               	addwf	TX_16@tmp,w
  2306  04E2  00F3               	movwf	??_TX_16
  2307  04E3  0850               	movf	TX_16@tmp+1,w
  2308  04E4  1803               	skipnc
  2309  04E5  0A50               	incf	TX_16@tmp+1,w
  2310  04E6  00F4               	movwf	??_TX_16+1
  2311  04E7  0874               	movf	??_TX_16+1,w
  2312  04E8  024C               	subwf	TX_16@i+1,w
  2313  04E9  1D03               	skipz
  2314  04EA  2CED               	goto	u615
  2315  04EB  0873               	movf	??_TX_16,w
  2316  04EC  024B               	subwf	TX_16@i,w
  2317  04ED                     u615:
  2318  04ED  1C03               	skipc
  2319  04EE  2CF0               	goto	u611
  2320  04EF  2CF1               	goto	u610
  2321  04F0                     u611:
  2322  04F0  2CB7               	goto	l1209
  2323  04F1                     u610:
  2324  04F1                     l1217:
  2325                           
  2326                           ;modbus.c: 104:        MODBUS->txlen=8;
  2327  04F1  3008               	movlw	8
  2328  04F2  00F3               	movwf	??_TX_16
  2329  04F3  0851               	movf	TX_16@MODBUS,w
  2330  04F4  3E35               	addlw	53
  2331  04F5  0084               	movwf	4
  2332  04F6  0873               	movf	??_TX_16,w
  2333  04F7  0080               	movwf	0
  2334                           
  2335                           ;modbus.c: 105:        MODBUS->write=1;
  2336  04F8  0851               	movf	TX_16@MODBUS,w
  2337  04F9  3E38               	addlw	56
  2338  04FA  0084               	movwf	4
  2339  04FB  0180               	clrf	0
  2340  04FC  0A80               	incf	0,f
  2341                           
  2342                           ;modbus.c: 106:     }
  2343  04FD  2D08               	goto	l163
  2344  04FE                     l1219:
  2345                           
  2346                           ;modbus.c: 108:    {;modbus.c: 110:     TX_ERROR(MODBUS,0x02) ;
  2347  04FE  3002               	movlw	2
  2348  04FF  00F3               	movwf	??_TX_16
  2349  0500  0873               	movf	??_TX_16,w
  2350  0501  00F0               	movwf	TX_ERROR@error_type
  2351  0502  0851               	movf	TX_16@MODBUS,w
  2352  0503  120A  118A  2301  120A  118A  	fcall	_TX_ERROR
  2353  0508                     l163:
  2354  0508  0008               	return
  2355  0509                     __end_of_TX_16:
  2356                           
  2357                           	psect	text8
  2358  064D                     __ptext8:	
  2359 ;; *************** function _TX_03 *****************
  2360 ;; Defined at:
  2361 ;;		line 53 in file "modbus.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  MODBUS          1    wreg     PTR struct .
  2364 ;;		 -> MODBUS(57), 
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;  MODBUS          1    8[BANK0 ] PTR struct .
  2367 ;;		 -> MODBUS(57), 
  2368 ;;  m               2    6[BANK0 ] unsigned int 
  2369 ;;  tmp1            2    4[BANK0 ] unsigned int 
  2370 ;;  tmp             2    2[BANK0 ] unsigned int 
  2371 ;;  n               2    0[BANK0 ] unsigned int 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       0       0       0       0
  2382 ;;      Locals:         0       9       0       0       0
  2383 ;;      Temps:          6       0       0       0       0
  2384 ;;      Totals:         6       9       0       0       0
  2385 ;;Total ram usage:       15 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    1
  2388 ;; This function calls:
  2389 ;;		_TX_ERROR
  2390 ;; This function is called by:
  2391 ;;		_MODBUS_SLAVE
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _TX_03
  2397  064D                     _TX_03:
  2398                           
  2399                           ;incstack = 0
  2400                           ; Regs used in _TX_03: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2401                           ;TX_03@MODBUS stored from wreg
  2402  064D  1283               	bcf	3,5	;RP0=0, select bank0
  2403  064E  1303               	bcf	3,6	;RP1=0, select bank0
  2404  064F  00D3               	movwf	TX_03@MODBUS
  2405  0650                     l1175:
  2406  0650  01CB               	clrf	TX_03@n
  2407  0651  01CC               	clrf	TX_03@n+1
  2408  0652                     l1177:
  2409                           
  2410                           ;modbus.c: 58:    tmp=((MODBUS->buffer[2]<<8)+MODBUS->buffer[3]);
  2411  0652  0853               	movf	TX_03@MODBUS,w
  2412  0653  3E02               	addlw	2
  2413  0654  0084               	movwf	4
  2414  0655  1383               	bcf	3,7	;select IRP bank0
  2415  0656  0800               	movf	0,w
  2416  0657  00F3               	movwf	??_TX_03
  2417  0658  01F4               	clrf	??_TX_03+1
  2418  0659  0873               	movf	??_TX_03,w
  2419  065A  00F4               	movwf	??_TX_03+1
  2420  065B  01F3               	clrf	??_TX_03
  2421  065C  0853               	movf	TX_03@MODBUS,w
  2422  065D  3E03               	addlw	3
  2423  065E  0084               	movwf	4
  2424  065F  0800               	movf	0,w
  2425  0660  0773               	addwf	??_TX_03,w
  2426  0661  00CD               	movwf	TX_03@tmp
  2427  0662  3000               	movlw	0
  2428  0663  1803               	skipnc
  2429  0664  3001               	movlw	1
  2430  0665  0774               	addwf	??_TX_03+1,w
  2431  0666  00CE               	movwf	TX_03@tmp+1
  2432  0667                     l1179:
  2433                           
  2434                           ;modbus.c: 60:    tmp1=((MODBUS->buffer[4]<<8)+MODBUS->buffer[5]);
  2435  0667  0853               	movf	TX_03@MODBUS,w
  2436  0668  3E04               	addlw	4
  2437  0669  0084               	movwf	4
  2438  066A  0800               	movf	0,w
  2439  066B  00F3               	movwf	??_TX_03
  2440  066C  01F4               	clrf	??_TX_03+1
  2441  066D  0873               	movf	??_TX_03,w
  2442  066E  00F4               	movwf	??_TX_03+1
  2443  066F  01F3               	clrf	??_TX_03
  2444  0670  0853               	movf	TX_03@MODBUS,w
  2445  0671  3E05               	addlw	5
  2446  0672  0084               	movwf	4
  2447  0673  0800               	movf	0,w
  2448  0674  0773               	addwf	??_TX_03,w
  2449  0675  00CF               	movwf	TX_03@tmp1
  2450  0676  3000               	movlw	0
  2451  0677  1803               	skipnc
  2452  0678  3001               	movlw	1
  2453  0679  0774               	addwf	??_TX_03+1,w
  2454  067A  00D0               	movwf	TX_03@tmp1+1
  2455  067B                     l1181:
  2456                           
  2457                           ;modbus.c: 62:    n=3;
  2458  067B  3003               	movlw	3
  2459  067C  00CB               	movwf	TX_03@n
  2460  067D  3000               	movlw	0
  2461  067E  00CC               	movwf	TX_03@n+1
  2462  067F                     l1183:
  2463                           
  2464                           ;modbus.c: 65:   if((((tmp+tmp1)<20)&(tmp1<(50 -5)/2 +1)))
  2465  067F  084F               	movf	TX_03@tmp1,w
  2466  0680  074D               	addwf	TX_03@tmp,w
  2467  0681  00F3               	movwf	??_TX_03
  2468  0682  0850               	movf	TX_03@tmp1+1,w
  2469  0683  1803               	skipnc
  2470  0684  0A50               	incf	TX_03@tmp1+1,w
  2471  0685  074E               	addwf	TX_03@tmp+1,w
  2472  0686  00F4               	movwf	??_TX_03+1
  2473  0687  3000               	movlw	0
  2474  0688  0274               	subwf	??_TX_03+1,w
  2475  0689  3014               	movlw	20
  2476  068A  1903               	skipnz
  2477  068B  0273               	subwf	??_TX_03,w
  2478  068C  1803               	skipnc
  2479  068D  2E8F               	goto	u531
  2480  068E  2E90               	goto	u530
  2481  068F                     u531:
  2482  068F  2EFC               	goto	l1199
  2483  0690                     u530:
  2484  0690                     l1185:
  2485  0690  3000               	movlw	0
  2486  0691  0250               	subwf	TX_03@tmp1+1,w
  2487  0692  3017               	movlw	23
  2488  0693  1903               	skipnz
  2489  0694  024F               	subwf	TX_03@tmp1,w
  2490  0695  1803               	skipnc
  2491  0696  2E98               	goto	u541
  2492  0697  2E99               	goto	u540
  2493  0698                     u541:
  2494  0698  2EFC               	goto	l1199
  2495  0699                     u540:
  2496  0699                     l1187:
  2497                           
  2498                           ;modbus.c: 66:    {;modbus.c: 68:     for(m=0;m<tmp1;m++)
  2499  0699  01D1               	clrf	TX_03@m
  2500  069A  01D2               	clrf	TX_03@m+1
  2501  069B  2EDE               	goto	l1195
  2502  069C                     l1189:
  2503                           
  2504                           ;modbus.c: 69:     {;modbus.c: 70:      MODBUS->buffer[n]=res_table[m+tmp].byte.HB;
  2505  069C  0851               	movf	TX_03@m,w
  2506  069D  00F3               	movwf	??_TX_03
  2507  069E  3001               	movlw	1
  2508  069F                     u555:
  2509  069F  1003               	clrc
  2510  06A0  0DF3               	rlf	??_TX_03,f
  2511  06A1  3EFF               	addlw	-1
  2512  06A2  1D03               	skipz
  2513  06A3  2E9F               	goto	u555
  2514  06A4  3021               	movlw	(low ((_res_table| 0+1)))& (0+255)
  2515  06A5  0773               	addwf	??_TX_03,w
  2516  06A6  00F4               	movwf	??_TX_03+1
  2517  06A7  084D               	movf	TX_03@tmp,w
  2518  06A8  00F5               	movwf	??_TX_03+2
  2519  06A9  0775               	addwf	??_TX_03+2,w
  2520  06AA  0774               	addwf	??_TX_03+1,w
  2521  06AB  00F6               	movwf	??_TX_03+3
  2522  06AC  0876               	movf	??_TX_03+3,w
  2523  06AD  0084               	movwf	4
  2524  06AE  0800               	movf	0,w
  2525  06AF  00F7               	movwf	??_TX_03+4
  2526  06B0  084B               	movf	TX_03@n,w
  2527  06B1  0753               	addwf	TX_03@MODBUS,w
  2528  06B2  00F8               	movwf	??_TX_03+5
  2529  06B3  0878               	movf	??_TX_03+5,w
  2530  06B4  0084               	movwf	4
  2531  06B5  0877               	movf	??_TX_03+4,w
  2532  06B6  0080               	movwf	0
  2533                           
  2534                           ;modbus.c: 71:      MODBUS->buffer[n+1]=res_table[m+tmp].byte.LB;
  2535  06B7  0851               	movf	TX_03@m,w
  2536  06B8  00F3               	movwf	??_TX_03
  2537  06B9  3001               	movlw	1
  2538  06BA                     u565:
  2539  06BA  1003               	clrc
  2540  06BB  0DF3               	rlf	??_TX_03,f
  2541  06BC  3EFF               	addlw	-1
  2542  06BD  1D03               	skipz
  2543  06BE  2EBA               	goto	u565
  2544  06BF  3020               	movlw	(low (_res_table| 0))& (0+255)
  2545  06C0  0773               	addwf	??_TX_03,w
  2546  06C1  00F4               	movwf	??_TX_03+1
  2547  06C2  084D               	movf	TX_03@tmp,w
  2548  06C3  00F5               	movwf	??_TX_03+2
  2549  06C4  0775               	addwf	??_TX_03+2,w
  2550  06C5  0774               	addwf	??_TX_03+1,w
  2551  06C6  00F6               	movwf	??_TX_03+3
  2552  06C7  0876               	movf	??_TX_03+3,w
  2553  06C8  0084               	movwf	4
  2554  06C9  0800               	movf	0,w
  2555  06CA  00F7               	movwf	??_TX_03+4
  2556  06CB  084B               	movf	TX_03@n,w
  2557  06CC  0753               	addwf	TX_03@MODBUS,w
  2558  06CD  00F8               	movwf	??_TX_03+5
  2559  06CE  0A78               	incf	??_TX_03+5,w
  2560  06CF  0084               	movwf	4
  2561  06D0  0877               	movf	??_TX_03+4,w
  2562  06D1  0080               	movwf	0
  2563  06D2                     l1191:
  2564                           
  2565                           ;modbus.c: 72:      n+=2;
  2566  06D2  3002               	movlw	2
  2567  06D3  07CB               	addwf	TX_03@n,f
  2568  06D4  1803               	skipnc
  2569  06D5  0ACC               	incf	TX_03@n+1,f
  2570  06D6  3000               	movlw	0
  2571  06D7  07CC               	addwf	TX_03@n+1,f
  2572  06D8                     l1193:
  2573                           
  2574                           ;modbus.c: 73:     }
  2575  06D8  3001               	movlw	1
  2576  06D9  07D1               	addwf	TX_03@m,f
  2577  06DA  1803               	skipnc
  2578  06DB  0AD2               	incf	TX_03@m+1,f
  2579  06DC  3000               	movlw	0
  2580  06DD  07D2               	addwf	TX_03@m+1,f
  2581  06DE                     l1195:
  2582  06DE  0850               	movf	TX_03@tmp1+1,w
  2583  06DF  0252               	subwf	TX_03@m+1,w
  2584  06E0  1D03               	skipz
  2585  06E1  2EE4               	goto	u575
  2586  06E2  084F               	movf	TX_03@tmp1,w
  2587  06E3  0251               	subwf	TX_03@m,w
  2588  06E4                     u575:
  2589  06E4  1C03               	skipc
  2590  06E5  2EE7               	goto	u571
  2591  06E6  2EE8               	goto	u570
  2592  06E7                     u571:
  2593  06E7  2E9C               	goto	l1189
  2594  06E8                     u570:
  2595  06E8                     l1197:
  2596                           
  2597                           ;modbus.c: 75:      MODBUS->buffer[2]=m*2;
  2598  06E8  0851               	movf	TX_03@m,w
  2599  06E9  00F3               	movwf	??_TX_03
  2600  06EA  0773               	addwf	??_TX_03,w
  2601  06EB  00F4               	movwf	??_TX_03+1
  2602  06EC  0853               	movf	TX_03@MODBUS,w
  2603  06ED  3E02               	addlw	2
  2604  06EE  0084               	movwf	4
  2605  06EF  0874               	movf	??_TX_03+1,w
  2606  06F0  0080               	movwf	0
  2607                           
  2608                           ;modbus.c: 76:      MODBUS->txlen=m*2+5;
  2609  06F1  0851               	movf	TX_03@m,w
  2610  06F2  00F3               	movwf	??_TX_03
  2611  06F3  0773               	addwf	??_TX_03,w
  2612  06F4  3E05               	addlw	5
  2613  06F5  00F4               	movwf	??_TX_03+1
  2614  06F6  0853               	movf	TX_03@MODBUS,w
  2615  06F7  3E35               	addlw	53
  2616  06F8  0084               	movwf	4
  2617  06F9  0874               	movf	??_TX_03+1,w
  2618  06FA  0080               	movwf	0
  2619                           
  2620                           ;modbus.c: 78:    }
  2621  06FB  2F06               	goto	l155
  2622  06FC                     l1199:
  2623                           
  2624                           ;modbus.c: 80:   {;modbus.c: 83:    TX_ERROR(MODBUS,0x02);
  2625  06FC  3002               	movlw	2
  2626  06FD  00F3               	movwf	??_TX_03
  2627  06FE  0873               	movf	??_TX_03,w
  2628  06FF  00F0               	movwf	TX_ERROR@error_type
  2629  0700  0853               	movf	TX_03@MODBUS,w
  2630  0701  120A  118A  2301  120A  118A  	fcall	_TX_ERROR
  2631  0706                     l155:
  2632  0706  0008               	return
  2633  0707                     __end_of_TX_03:
  2634                           
  2635                           	psect	text9
  2636  0301                     __ptext9:	
  2637 ;; *************** function _TX_ERROR *****************
  2638 ;; Defined at:
  2639 ;;		line 133 in file "modbus.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;  MODBUS          1    wreg     PTR struct .
  2642 ;;		 -> MODBUS(57), 
  2643 ;;  error_type      1    0[COMMON] unsigned char 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  MODBUS          1    2[COMMON] PTR struct .
  2646 ;;		 -> MODBUS(57), 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2656 ;;      Params:         1       0       0       0       0
  2657 ;;      Locals:         1       0       0       0       0
  2658 ;;      Temps:          1       0       0       0       0
  2659 ;;      Totals:         3       0       0       0       0
  2660 ;;Total ram usage:        3 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_MODBUS_SLAVE
  2666 ;;		_TX_03
  2667 ;;		_TX_16
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           
  2672                           ;psect for function _TX_ERROR
  2673  0301                     _TX_ERROR:
  2674                           
  2675                           ;incstack = 0
  2676                           ; Regs used in _TX_ERROR: [wreg-fsr0h+status,2+status,0]
  2677                           ;TX_ERROR@MODBUS stored from wreg
  2678  0301  00F2               	movwf	TX_ERROR@MODBUS
  2679  0302                     l1135:
  2680                           
  2681                           ;modbus.c: 133: void TX_ERROR(UART_DATA *MODBUS,unsigned char error_type);modbus.c: 134:
      +                           {;modbus.c: 137:     MODBUS->buffer[1]|=0b10000000;
  2682  0302  0A72               	incf	TX_ERROR@MODBUS,w
  2683  0303  0084               	movwf	4
  2684  0304  1383               	bcf	3,7	;select IRP bank0
  2685  0305  1780               	bsf	0,7
  2686  0306                     l1137:
  2687                           
  2688                           ;modbus.c: 138:     MODBUS->buffer[2]=error_type;
  2689  0306  0870               	movf	TX_ERROR@error_type,w
  2690  0307  00F1               	movwf	??_TX_ERROR
  2691  0308  0872               	movf	TX_ERROR@MODBUS,w
  2692  0309  3E02               	addlw	2
  2693  030A  0084               	movwf	4
  2694  030B  0871               	movf	??_TX_ERROR,w
  2695  030C  0080               	movwf	0
  2696  030D                     l1139:
  2697                           
  2698                           ;modbus.c: 139:     MODBUS->txlen=5;
  2699  030D  3005               	movlw	5
  2700  030E  00F1               	movwf	??_TX_ERROR
  2701  030F  0872               	movf	TX_ERROR@MODBUS,w
  2702  0310  3E35               	addlw	53
  2703  0311  0084               	movwf	4
  2704  0312  0871               	movf	??_TX_ERROR,w
  2705  0313  0080               	movwf	0
  2706  0314                     l175:
  2707  0314  0008               	return
  2708  0315                     __end_of_TX_ERROR:
  2709                           
  2710                           	psect	text10
  2711  040D                     __ptext10:	
  2712 ;; *************** function _CRC16 *****************
  2713 ;; Defined at:
  2714 ;;		line 145 in file "modbus.c"
  2715 ;; Parameters:    Size  Location     Type
  2716 ;;  ptrByte         1    wreg     PTR unsigned char 
  2717 ;;		 -> MODBUS(57), 
  2718 ;;  byte_cnt        2    0[COMMON] int 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  ptrByte         1   11[COMMON] PTR unsigned char 
  2721 ;;		 -> MODBUS(57), 
  2722 ;;  w               2   12[COMMON] unsigned int 
  2723 ;;  shift_cnt       1   10[COMMON] unsigned char 
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  2    0[COMMON] unsigned int 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2733 ;;      Params:         2       0       0       0       0
  2734 ;;      Locals:         4       0       0       0       0
  2735 ;;      Temps:          8       0       0       0       0
  2736 ;;      Totals:        14       0       0       0       0
  2737 ;;Total ram usage:       14 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_MODBUS_SLAVE
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           
  2747                           ;psect for function _CRC16
  2748  040D                     _CRC16:
  2749                           
  2750                           ;incstack = 0
  2751                           ; Regs used in _CRC16: [wreg-fsr0h+status,2+status,0+btemp+1]
  2752                           ;CRC16@ptrByte stored from wreg
  2753  040D  00FB               	movwf	CRC16@ptrByte
  2754  040E                     l1141:
  2755                           
  2756                           ;modbus.c: 146: unsigned int w=0;
  2757  040E  01FC               	clrf	CRC16@w
  2758  040F  01FD               	clrf	CRC16@w+1
  2759  0410                     l1143:
  2760                           
  2761                           ;modbus.c: 147: char shift_cnt;;modbus.c: 149:  if(ptrByte)
  2762  0410  087B               	movf	CRC16@ptrByte,w
  2763  0411  1903               	btfsc	3,2
  2764  0412  2C14               	goto	u481
  2765  0413  2C15               	goto	u480
  2766  0414                     u481:
  2767  0414  2C7A               	goto	l1171
  2768  0415                     u480:
  2769  0415                     l1145:
  2770                           
  2771                           ;modbus.c: 150:  {;modbus.c: 151:    w=0xffffU;
  2772  0415  30FF               	movlw	255
  2773  0416  00FC               	movwf	CRC16@w
  2774  0417  30FF               	movlw	255
  2775  0418  00FD               	movwf	CRC16@w+1
  2776  0419                     l1147:
  2777                           
  2778                           ;modbus.c: 152:    for(; byte_cnt>0; byte_cnt--)
  2779  0419  0871               	movf	CRC16@byte_cnt+1,w
  2780  041A  3A80               	xorlw	128
  2781  041B  00FF               	movwf	btemp+1
  2782  041C  3080               	movlw	128
  2783  041D  027F               	subwf	btemp+1,w
  2784  041E  1D03               	skipz
  2785  041F  2C22               	goto	u495
  2786  0420  3001               	movlw	1
  2787  0421  0270               	subwf	CRC16@byte_cnt,w
  2788  0422                     u495:
  2789  0422  1803               	skipnc
  2790  0423  2C25               	goto	u491
  2791  0424  2C26               	goto	u490
  2792  0425                     u491:
  2793  0425  2C27               	goto	l1151
  2794  0426                     u490:
  2795  0426  2C7A               	goto	l1171
  2796  0427                     l1151:
  2797                           
  2798                           ;modbus.c: 153:    {;modbus.c: 154:     w=(unsigned int)((w/256U)*256U+((w%256U)^(*ptrBy
      +                          te++)));
  2799  0427  087B               	movf	CRC16@ptrByte,w
  2800  0428  0084               	movwf	4
  2801  0429  1383               	bcf	3,7	;select IRP bank0
  2802  042A  0800               	movf	0,w
  2803  042B  00F2               	movwf	??_CRC16
  2804  042C  01F3               	clrf	??_CRC16+1
  2805  042D  30FF               	movlw	255
  2806  042E  057C               	andwf	CRC16@w,w
  2807  042F  00F4               	movwf	??_CRC16+2
  2808  0430  3000               	movlw	0
  2809  0431  057D               	andwf	CRC16@w+1,w
  2810  0432  00F5               	movwf	??_CRC16+3
  2811  0433  0872               	movf	??_CRC16,w
  2812  0434  0674               	xorwf	??_CRC16+2,w
  2813  0435  00F6               	movwf	??_CRC16+4
  2814  0436  0873               	movf	??_CRC16+1,w
  2815  0437  0675               	xorwf	??_CRC16+3,w
  2816  0438  00F7               	movwf	??_CRC16+5
  2817  0439  087D               	movf	CRC16@w+1,w
  2818  043A  00F9               	movwf	??_CRC16+7
  2819  043B  087C               	movf	CRC16@w,w
  2820  043C  00F8               	movwf	??_CRC16+6
  2821  043D  0879               	movf	??_CRC16+7,w
  2822  043E  00F8               	movwf	??_CRC16+6
  2823  043F  01F9               	clrf	??_CRC16+7
  2824  0440  0878               	movf	??_CRC16+6,w
  2825  0441  00F9               	movwf	??_CRC16+7
  2826  0442  01F8               	clrf	??_CRC16+6
  2827  0443  0876               	movf	??_CRC16+4,w
  2828  0444  0778               	addwf	??_CRC16+6,w
  2829  0445  00FC               	movwf	CRC16@w
  2830  0446  0877               	movf	??_CRC16+5,w
  2831  0447  1803               	skipnc
  2832  0448  0A77               	incf	??_CRC16+5,w
  2833  0449  0779               	addwf	??_CRC16+7,w
  2834  044A  00FD               	movwf	CRC16@w+1
  2835  044B                     l1153:
  2836  044B  3001               	movlw	1
  2837  044C  00F2               	movwf	??_CRC16
  2838  044D  0872               	movf	??_CRC16,w
  2839  044E  07FB               	addwf	CRC16@ptrByte,f
  2840  044F                     l1155:
  2841                           
  2842                           ;modbus.c: 155:     for(shift_cnt=0; shift_cnt<8; shift_cnt++)
  2843  044F  01FA               	clrf	CRC16@shift_cnt
  2844  0450                     l181:
  2845                           
  2846                           ;modbus.c: 156:     {;modbus.c: 157:      if((w&0x1)==1)
  2847  0450  1C7C               	btfss	CRC16@w,0
  2848  0451  2C53               	goto	u501
  2849  0452  2C54               	goto	u500
  2850  0453                     u501:
  2851  0453  2C62               	goto	l1163
  2852  0454                     u500:
  2853  0454                     l1161:
  2854                           
  2855                           ;modbus.c: 158:      w=(unsigned int)((w>>1)^0xa001U);
  2856  0454  087D               	movf	CRC16@w+1,w
  2857  0455  00F3               	movwf	??_CRC16+1
  2858  0456  087C               	movf	CRC16@w,w
  2859  0457  00F2               	movwf	??_CRC16
  2860  0458  1003               	clrc
  2861  0459  0CF3               	rrf	??_CRC16+1,f
  2862  045A  0CF2               	rrf	??_CRC16,f
  2863  045B  3001               	movlw	1
  2864  045C  0672               	xorwf	??_CRC16,w
  2865  045D  00FC               	movwf	CRC16@w
  2866  045E  30A0               	movlw	160
  2867  045F  0673               	xorwf	??_CRC16+1,w
  2868  0460  00FD               	movwf	CRC16@w+1
  2869  0461  2C69               	goto	l184
  2870  0462                     l1163:
  2871                           
  2872                           ;modbus.c: 160:      w>>=1;
  2873  0462  3001               	movlw	1
  2874  0463                     u515:
  2875  0463  1003               	clrc
  2876  0464  0CFD               	rrf	CRC16@w+1,f
  2877  0465  0CFC               	rrf	CRC16@w,f
  2878  0466  3EFF               	addlw	-1
  2879  0467  1D03               	skipz
  2880  0468  2C63               	goto	u515
  2881  0469                     l184:
  2882                           
  2883                           ;modbus.c: 161:     }
  2884  0469  3001               	movlw	1
  2885  046A  00F2               	movwf	??_CRC16
  2886  046B  0872               	movf	??_CRC16,w
  2887  046C  07FA               	addwf	CRC16@shift_cnt,f
  2888  046D                     l1165:
  2889  046D  3008               	movlw	8
  2890  046E  027A               	subwf	CRC16@shift_cnt,w
  2891  046F  1C03               	skipc
  2892  0470  2C72               	goto	u521
  2893  0471  2C73               	goto	u520
  2894  0472                     u521:
  2895  0472  2C50               	goto	l181
  2896  0473                     u520:
  2897  0473                     l1167:
  2898                           
  2899                           ;modbus.c: 162:    }
  2900  0473  30FF               	movlw	255
  2901  0474  07F0               	addwf	CRC16@byte_cnt,f
  2902  0475  1803               	skipnc
  2903  0476  0AF1               	incf	CRC16@byte_cnt+1,f
  2904  0477  30FF               	movlw	255
  2905  0478  07F1               	addwf	CRC16@byte_cnt+1,f
  2906  0479  2C19               	goto	l1147
  2907  047A                     l1171:
  2908                           
  2909                           ;modbus.c: 164: return w;
  2910  047A  087D               	movf	CRC16@w+1,w
  2911  047B  00F1               	movwf	?_CRC16+1
  2912  047C  087C               	movf	CRC16@w,w
  2913  047D  00F0               	movwf	?_CRC16
  2914  047E                     l185:
  2915  047E  0008               	return
  2916  047F                     __end_of_CRC16:
  2917                           
  2918                           	psect	text11
  2919  032C                     __ptext11:	
  2920 ;; *************** function _ADC_Read *****************
  2921 ;; Defined at:
  2922 ;;		line 60 in file "main.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  adc_ch          1    wreg     unsigned char 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  adc_ch          1    3[COMMON] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  2    0[COMMON] unsigned int 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         2       0       0       0       0
  2937 ;;      Locals:         1       0       0       0       0
  2938 ;;      Temps:          1       0       0       0       0
  2939 ;;      Totals:         4       0       0       0       0
  2940 ;;Total ram usage:        4 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           
  2950                           ;psect for function _ADC_Read
  2951  032C                     _ADC_Read:
  2952                           
  2953                           ;incstack = 0
  2954                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  2955                           ;ADC_Read@adc_ch stored from wreg
  2956  032C  00F3               	movwf	ADC_Read@adc_ch
  2957  032D                     l1289:
  2958                           
  2959                           ;main.c: 60: unsigned int ADC_Read(unsigned char adc_ch);main.c: 61: {;main.c: 62:   ADC
      +                          ON0bits.CHS = adc_ch;
  2960  032D  0873               	movf	ADC_Read@adc_ch,w
  2961  032E  00F2               	movwf	??_ADC_Read
  2962  032F  0DF2               	rlf	??_ADC_Read,f
  2963  0330  0DF2               	rlf	??_ADC_Read,f
  2964  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0333  081F               	movf	31,w	;volatile
  2967  0334  0672               	xorwf	??_ADC_Read,w
  2968  0335  39C3               	andlw	-61
  2969  0336  0672               	xorwf	??_ADC_Read,w
  2970  0337  009F               	movwf	31	;volatile
  2971  0338                     l1291:
  2972                           
  2973                           ;main.c: 64:   _delay((unsigned long)((50)*(20000000/4000000.0)));
  2974  0338  3053               	movlw	83
  2975  0339  00F2               	movwf	??_ADC_Read
  2976  033A                     u957:
  2977  033A  0BF2               	decfsz	??_ADC_Read,f
  2978  033B  2B3A               	goto	u957
  2979  033C                     l1293:
  2980                           
  2981                           ;main.c: 66:   ADCON0bits.GO_DONE = 1;
  2982  033C  1283               	bcf	3,5	;RP0=0, select bank0
  2983  033D  1303               	bcf	3,6	;RP1=0, select bank0
  2984  033E  149F               	bsf	31,1	;volatile
  2985  033F                     l94:	
  2986                           ;main.c: 68:   while(ADCON0bits.GO_DONE) ;
  2987                           
  2988  033F  189F               	btfsc	31,1	;volatile
  2989  0340  2B42               	goto	u741
  2990  0341  2B43               	goto	u740
  2991  0342                     u741:
  2992  0342  2B3F               	goto	l94
  2993  0343                     u740:
  2994  0343                     l1295:
  2995                           
  2996                           ;main.c: 71:   return ((ADRESH << 8) + ADRESL);
  2997  0343  081E               	movf	30,w	;volatile
  2998  0344  00F1               	movwf	?_ADC_Read+1
  2999  0345  1683               	bsf	3,5	;RP0=1, select bank1
  3000  0346  1303               	bcf	3,6	;RP1=0, select bank1
  3001  0347  081E               	movf	30,w	;volatile
  3002  0348  00F0               	movwf	?_ADC_Read
  3003  0349                     l97:
  3004  0349  0008               	return
  3005  034A                     __end_of_ADC_Read:
  3006  007E                     btemp	set	126	;btemp
  3007  007E                     wtemp0	set	126
  3008                           
  3009                           	psect	config
  3010                           
  3011                           ;Config register CONFIG1 @ 0x2007
  3012                           ;	Oscillator Selection bits
  3013                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  3014                           ;	Watchdog Timer Enable bit
  3015                           ;	WDTE = ON, WDT enabled
  3016                           ;	Power-up Timer Enable bit
  3017                           ;	PWRTE = 0x1, unprogrammed default
  3018                           ;	RE3/MCLR pin function select bit
  3019                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  3020                           ;	Code Protection bit
  3021                           ;	CP = 0x1, unprogrammed default
  3022                           ;	Data Code Protection bit
  3023                           ;	CPD = 0x1, unprogrammed default
  3024                           ;	Brown Out Reset Selection bits
  3025                           ;	BOREN = 0x3, unprogrammed default
  3026                           ;	Internal External Switchover bit
  3027                           ;	IESO = 0x1, unprogrammed default
  3028                           ;	Fail-Safe Clock Monitor Enabled bit
  3029                           ;	FCMEN = 0x1, unprogrammed default
  3030                           ;	Low Voltage Programming Enable bit
  3031                           ;	LVP = 0x1, unprogrammed default
  3032                           ;	In-Circuit Debugger Mode bit
  3033                           ;	DEBUG = 0x1, unprogrammed default
  3034  2007                     	org	8199
  3035  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         100
    Persistent  9
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      73
    BANK1            80      0      57
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    CRC16@ptrByte	PTR unsigned char  size(1) Largest target is 57
		 -> MODBUS(BANK1[57]), 

    TX_ERROR@MODBUS	PTR struct . size(1) Largest target is 57
		 -> MODBUS(BANK1[57]), 

    TX_FRAME@MODBUS	PTR struct . size(1) Largest target is 57
		 -> MODBUS(BANK1[57]), 

    TX_16@MODBUS	PTR struct . size(1) Largest target is 57
		 -> MODBUS(BANK1[57]), 

    TX_03@MODBUS	PTR struct . size(1) Largest target is 57
		 -> MODBUS(BANK1[57]), 

    MODBUS_SLAVE@MODBUS	PTR struct . size(1) Largest target is 57
		 -> MODBUS(BANK1[57]), 


Critical Paths under _main in COMMON

    _uart_init->___aldiv
    _MODBUS_SLAVE->_CRC16
    _TX_16->_TX_ERROR
    _TX_03->_TX_ERROR

Critical Paths under _main in BANK0

    _main->_uart_init
    _uart_init->___aldiv
    _MODBUS_SLAVE->_TX_03

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4130
                                             20 BANK0      1     1      0
                           _ADC_Read
                       _MODBUS_SLAVE
                        _eeprom_read
                           _pic_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           16    14      2     618
                                              9 COMMON     2     2      0
                                              6 BANK0     14    12      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _MODBUS_SLAVE                                         8     8      0    3468
                                              9 BANK0      8     8      0
                              _CRC16
                              _TX_03
                              _TX_16
                           _TX_ERROR
                           _TX_FRAME
 ---------------------------------------------------------------------------------
 (2) _TX_FRAME                                             3     3      0     165
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TX_16                                               12    12      0     828
                                              3 COMMON     5     5      0
                                              0 BANK0      7     7      0
                           _TX_ERROR
 ---------------------------------------------------------------------------------
 (2) _TX_03                                               15    15      0     940
                                              3 COMMON     6     6      0
                                              0 BANK0      9     9      0
                           _TX_ERROR
 ---------------------------------------------------------------------------------
 (2) _TX_ERROR                                             3     2      1     415
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _CRC16                                               14    12      2     469
                                              0 COMMON    14    12      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read
   _MODBUS_SLAVE
     _CRC16
     _TX_03
       _TX_ERROR
     _TX_16
       _TX_ERROR
     _TX_ERROR
     _TX_FRAME
   _eeprom_read
   _pic_init
   _uart_init
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      90       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      49       5       91.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      39       7       71.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      90      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 15 10:33:04 2021

                     l25 036A                       l94 033F                       l97 0349  
                     fsr 0004                      l102 05EA                      l105 0648  
                    l202 040C                      l155 0706                      l163 0508  
                    l171 039F                      l147 07EA                      l172 03A6  
                    l181 0450                      l175 0314                      l184 0469  
                    l168 0388                      l185 047E                      l169 0387  
                    l366 051D                      l295 0316                      l376 05A5  
                    l297 032B                      u500 0454                      u501 0453  
                    u520 0473                      u600 04E1                      u521 0472  
                    u530 0690                      u610 04F1                      u515 0463  
                    u531 068F                      u611 04F0                      u540 0699  
                    u620 038E                      u700 056F                      u541 0698  
                    u621 038D                      u701 056E                      u630 039F  
                    u615 04ED                      u631 039E                      u480 0415  
                    u800 0756                      u720 058D                      u640 0510  
                    u481 0414                      u801 0755                      u721 058C  
                    u705 056B                      u641 050F                      u490 0426  
                    u570 06E8                      u810 0773                      u730 0592  
                    u650 0521                      u491 0425                      u571 06E7  
                    u555 069F                      u811 0772                      u731 0591  
                    u715 057F                      u651 0520                      u740 0343  
                    u580 04AE                      u660 0540                      u741 0342  
                    u565 06BA                      u581 04AD                      u805 0752  
                    u661 053F                      u590 04E0                      u750 03DA  
                    u495 0422                      u575 06E4                      u591 04DE  
                    u815 076F                      u751 03DB                      u760 031D  
                    u680 0554                      u752 03E0                      u920 0632  
                    u761 031C                      u681 0553                      u753 03E1  
                    u921 0631                      u770 0713                      u930 0640  
                    u771 0712                      u675 0545                      u931 063F  
                    u780 071A                      u940 0646                      u781 0719  
                    u941 0645                      u790 0723                      u791 0722  
                    u695 0556                      u957 033A                      fsr0 0004  
                    indf 0000           TX_FRAME@MODBUS 0072                     l1201 0482  
                   l1211 04CF                     l1203 0497                     l1141 040E  
                   l1213 04D3                     l1205 049E                     l1221 036C  
                   l1301 03AE                     l1151 0427                     l1143 0410  
                   l1135 0302                     l1215 04D9                     l1207 04AE  
                   l1223 0374                     l1231 0509                     l1311 040A  
                   l1303 03FA                     l1161 0454                     l1153 044B  
                   l1145 0415                     l1137 0306                     l1217 04F1  
                   l1209 04B7                     l1225 038E                     l1321 071A  
                   l1313 031D                     l1241 0530                     l1233 050C  
                   l1305 03FE                     l1163 0462                     l1155 044F  
                   l1147 0419                     l1171 047A                     l1139 030D  
                   l1219 04FE                     l1227 03A0                     l1331 0774  
                   l1323 0723                     l1251 0554                     l1243 0538  
                   l1235 0510                     l1307 0402                     l1411 05B9  
                   l1403 05A6                     l1165 046D                     l1181 067B  
                   l1229 03A4                     l1333 077B                     l1341 079D  
                   l1325 0739                     l1317 070A                     l1261 0587  
                   l1253 055D                     l1245 0540                     l1237 0521  
                   l1309 0406                     l1421 05DF                     l1413 05BC  
                   l1405 05B6                     l1167 0473                     l1191 06D2  
                   l1183 067F                     l1175 0650                     l1351 07DB  
                   l1343 07B6                     l1335 0782                     l1327 0756  
                   l1319 0713                     l1271 034A                     l1255 056F  
                   l1247 0543                     l1263 058D                     l1239 052C  
                   l1431 062B                     l1423 05EB                     l1415 05BD  
                   l1407 05B7                     l1193 06D8                     l1185 0690  
                   l1177 0652                     l1353 07E2                     l1345 07C4  
                   l1281 0361                     l1273 0356                     l1265 0592  
                   l1257 057D                     l1249 0550                     l1441 0646  
                   l1433 0632                     l1425 05F7                     l1417 05C5  
                   l1409 05B8                     l1291 0338                     l1195 06DE  
                   l1187 0699                     l1179 0667                     l1355 07E6  
                   l1347 07D1                     l1339 078B                     l1283 0363  
                   l1275 035A                     l1267 059D                     l1259 057E  
                   l1435 0638                     l1427 0603                     l1419 05D4  
                   l1293 033C                     l1197 06E8                     l1189 069C  
                   l1349 07D5                     l1285 0364                     l1277 035B  
                   l1437 063B                     l1429 060F                     l1295 0343  
                   l1199 06FC                     l1463 0795                     l1287 0368  
                   l1279 035E                     l1439 0640                     l1289 032D  
                   l1299 03A7                     _PIR1 000C                     _addr 0068  
                   _main 05A6                     btemp 007E         __end_of_ADC_Read 034A  
                   start 0000          __end_of___aldiv 05A6                    ?_main 0070  
                  _EEADR 010D                    _CRC16 040D                    _ANSEL 0188  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTB 0006                    _TRISB 0086                    _TX_03 064D  
                  _TX_16 047F                    _TXREG 0019                    _TXSTA 0098  
                  status 0003                    wtemp0 007E         __end_of_TX_FRAME 03A7  
          ?_MODBUS_SLAVE 0070         __end_of_TX_ERROR 0315              _Flag_Ch_Adc 0048  
        __initialization 07EB             __end_of_main 064D                   CRC16@w 007C  
                 ??_main 005F                   ?_CRC16 0070                   ?_TX_03 0070  
                 ?_TX_16 0070                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _EEDATA 010C  
                 _EECON1 018C           TX_ERROR@MODBUS 0072                   TX_03@m 0051  
                 TX_03@n 004B                   TX_16@i 004B                   TX_16@j 004E  
                 _ANSELH 0189                   _MODBUS 00A0                   _SPBRGH 009A  
         ??_MODBUS_SLAVE 0054     __size_of_eeprom_read 0017                ??___aldiv 0078  
       __end_of_pic_init 036B                ?_ADC_Read 0070  __end_of__initialization 07FC  
        eeprom_read@addr 0071            __end_of_CRC16 047F            __end_of_TX_03 0707  
          __end_of_TX_16 0509       MODBUS_SLAVE@MODBUS 005B           __pcstackCOMMON 0070  
                ??_CRC16 0072                  ??_TX_03 0073                  ??_TX_16 0073  
              ?_TX_FRAME 0070               ??_ADC_Read 0072                ?_TX_ERROR 0070  
             __pbssBANK0 0020               __pbssBANK1 00A0       TX_ERROR@error_type 0070  
             __pmaintext 05A6                  _BAUDCTL 0187     __end_of_MODBUS_SLAVE 07EB  
     __size_of_uart_init 0066               ??_TX_FRAME 0070               ??_TX_ERROR 0071  
              ?_pic_init 0070                  _TickAdc 004A                  ___aldiv 0509  
                _adc_ch0 0066                  _adc_ch1 0064                  _adc_ch2 0062  
                _adc_ch3 0060                TX_03@tmp1 004F                  __ptext1 03A7  
                __ptext2 0509                  __ptext3 034A                  __ptext4 0315  
                __ptext5 0707                  __ptext6 036B                  __ptext7 047F  
                __ptext8 064D                  __ptext9 0301         ___aldiv@dividend 0074  
                clrloop0 02FA     end_of_initialization 07FC               ??_pic_init 0070  
           CRC16@ptrByte 007B        __end_of_uart_init 040D                _RCSTAbits 0018  
       ___aldiv@quotient 004D                _PORTBbits 0006                _PORTCbits 0007  
              _TRISAbits 0085                _TRISCbits 0087        __size_of_ADC_Read 001E  
          ??_eeprom_read 0070                _TXSTAbits 0098          MODBUS_SLAVE@tmp 0059  
  __size_of_MODBUS_SLAVE 00E4      start_initialization 07EB        __size_of_TX_FRAME 003C  
      __size_of_TX_ERROR 0014             _MODBUS_SLAVE 0707              TX_03@MODBUS 0053  
         ADC_Read@adc_ch 0073      __end_of_eeprom_read 032C              TX_16@MODBUS 0051  
              ___latbits 0002            __pcstackBANK0 004B                __pnvBANK0 0060  
      __size_of_pic_init 0021                 ?___aldiv 0070           __size_of_CRC16 0072  
         __size_of_TX_03 00BA           __size_of_TX_16 008A                 _ADC_Read 032C  
               TX_03@tmp 004D                 TX_16@tmp 004F          ___aldiv@divisor 0070  
        ___aldiv@counter 004B                clear_ram0 02F9              _eeprom_read 0315  
               _PIE1bits 008C                _res_table 0020                 _PIR1bits 000C  
              _uart_init 03A7               _ADCON0bits 001F                 _TX_FRAME 036B  
               _TX_ERROR 0301                 _Flag_Adc 0049               _EECON1bits 018C  
             ?_uart_init 0051         __size_of___aldiv 009D               TX_16@count 004D  
         CRC16@shift_cnt 007A                 __ptext10 040D                 __ptext11 032C  
          __size_of_main 00A7                 _pic_init 034A           uart_init@bRate 0079  
             _INTCONbits 000B            CRC16@byte_cnt 0070            uart_init@baud 0051  
            ??_uart_init 0053               _OPTION_REG 0081             ___aldiv@sign 004C  
           ?_eeprom_read 0070  
